{"componentChunkName":"component---src-templates-article-tsx","path":"/articles/visual-studio-code-for-go/","result":{"pageContext":{"node":{"id":"a0367a45-58e0-5da5-ad08-a17669e8b964","tableOfContents":"<ul>\n<li><a href=\"#visual-studio-code-%E6%8F%90%E7%A4%BA%E9%94%99%E8%AF%AF\">Visual Studio Code 提示错误</a></li>\n<li><a href=\"#%E8%8E%B7%E5%8F%96%E4%BE%9D%E8%B5%96\">获取依赖</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\">安装依赖</a></li>\n</ul>","timeToRead":2,"excerpt":"Visual Studio Code 提示错误 初次使用 VS Code 开发 Go 程序需要安装相关依赖工具，由于开始启用了新的包管理机制造成了原来从 GitHub 获取包的形式不再适用，VS Code 输出报错： 不过官网又提供了变量来方便代理，同时要启用才可以生效。设置这两个变量即可通过代理…","fields":{"slug":"/articles/visual-studio-code-for-go"},"frontmatter":{"title":"Visual Studio Code 中的「Go配置」","author":"赤琦","date":"April 12, 2019","original":null,"description":null,"draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["Golang","VS Code","开发环境"]},"headings":[{"id":"visual-studio-code-提示错误","value":"Visual Studio Code 提示错误","depth":2},{"id":"获取依赖","value":"获取依赖","depth":2},{"id":"安装依赖","value":"安装依赖","depth":2}],"wordCount":{"words":33,"sentences":7,"paragraphs":7},"html":"<h2 id=\"visual-studio-code-提示错误\" style=\"position:relative;\"><a href=\"#visual-studio-code-%E6%8F%90%E7%A4%BA%E9%94%99%E8%AF%AF\" aria-label=\"visual studio code 提示错误 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visual Studio Code 提示错误</h2>\n<p>初次使用 VS Code 开发 Go 程序需要安装相关依赖工具，由于<code class=\"language-text\">go 1.11</code>开始启用了新的包管理机制造成了原来从 GitHub 获取包的形式不再适用，VS Code 输出报错：</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">Installing 14 tools at C:\\User\\RedBlue\\go\\bin\ngocode\ngopkgs\ngo-outline\ngo-symbols\nguru\ngorename\ngomodifytags\ngoplay\nimpl\ngodef\ngoreturns\ngolint\ngotests\ndlv\n\nInstalling github<span class=\"token punctuation\">.</span>com/nsf/gocode SUCCEEDED\nInstalling github<span class=\"token punctuation\">.</span>com/uudashr/gopkgs/cmd/gopkgs SUCCEEDED\nInstalling github<span class=\"token punctuation\">.</span>com/ramya-rao-a/go-outline FAILED\nInstalling github<span class=\"token punctuation\">.</span>com/acroca/go-symbols SUCCEEDED\nInstalling golang<span class=\"token punctuation\">.</span>org/x/tools/cmd/guru FAILED\nInstalling golang<span class=\"token punctuation\">.</span>org/x/tools/cmd/gorename FAILED\nInstalling github<span class=\"token punctuation\">.</span>com/fatih/gomodifytags SUCCEEDED\nnstalling github<span class=\"token punctuation\">.</span>com/haya14busa/goplay/cmd/goplay SUCCEEDED\nInstalling github<span class=\"token punctuation\">.</span>com/josharian/impl FAILED\nInstalling github<span class=\"token punctuation\">.</span>com/rogpeppe/godef SUCCEEDED\nInstalling sourcegraph<span class=\"token punctuation\">.</span>com/sqs/goreturns FAILED\nInstalling github<span class=\"token punctuation\">.</span>com/golang/lint/golint FAILED\nInstalling github<span class=\"token punctuation\">.</span>com/cweill/gotests/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> SUCCEEDED\nInstalling github<span class=\"token punctuation\">.</span>com/derekparker/delve/cmd/dlv SUCCEEDED\n\n6 tools failed to install<span class=\"token punctuation\">.</span></code></pre></div>\n<p>不过官网又提供了<code class=\"language-text\">GOPROXY</code>变量来方便代理，同时要启用<code class=\"language-text\">GO111MODULE</code>才可以生效。设置这两个变量即可通过代理获取 Google 代码库。</p>\n<h2 id=\"获取依赖\" style=\"position:relative;\"><a href=\"#%E8%8E%B7%E5%8F%96%E4%BE%9D%E8%B5%96\" aria-label=\"获取依赖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获取依赖</h2>\n<p>获取新的 16 个相关工具：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/mdempsky/gocode\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/uudashr/gopkgs/cmd/gopkgs\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/ramya-rao-a/go-outline\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/acroca/go-symbols\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> golang.org/x/tools/cmd/guru\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> golang.org/x/tools/cmd/gorename\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/go-delve/delve/cmd/dlv\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/stamblerre/gocode\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/rogpeppe/godef\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/sqs/goreturns\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> golang.org/x/lint/golint\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/cweill/gotests/<span class=\"token punctuation\">..</span>.\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/fatih/gomodifytags\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/josharian/impl\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/davidrjenni/reftools/cmd/fillstruct\n<span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span><span class=\"token string\">'https://gocenter.io'</span> <span class=\"token assign-left variable\">GO111MODULE</span><span class=\"token operator\">=</span><span class=\"token string\">'on'</span> go get <span class=\"token parameter variable\">-u</span> github.com/haya14busa/goplay/cmd/goplay</code></pre></div>\n<h2 id=\"安装依赖\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96\" aria-label=\"安装依赖 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安装依赖</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">go install github<span class=\"token punctuation\">.</span>com/mdempsky/gocode\ngo install github<span class=\"token punctuation\">.</span>com/uudashr/gopkgs/cmd/gopkgs\ngo install github<span class=\"token punctuation\">.</span>com/ramya-rao-a/go-outline\ngo install github<span class=\"token punctuation\">.</span>com/acroca/go-symbols\ngo install golang<span class=\"token punctuation\">.</span>org/x/tools/cmd/guru\ngo install golang<span class=\"token punctuation\">.</span>org/x/tools/cmd/gorename\ngo install github<span class=\"token punctuation\">.</span>com/go-delve/delve/cmd/dlv\ngo install github<span class=\"token punctuation\">.</span>com/stamblerre/gocode\ngo install github<span class=\"token punctuation\">.</span>com/rogpeppe/godef\ngo install github<span class=\"token punctuation\">.</span>com/sqs/goreturns\ngo install golang<span class=\"token punctuation\">.</span>org/x/lint/golint\ngo install github<span class=\"token punctuation\">.</span>com/cweill/gotests/<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ngo install github<span class=\"token punctuation\">.</span>com/fatih/gomodifytags\ngo install github<span class=\"token punctuation\">.</span>com/josharian/impl\ngo install github<span class=\"token punctuation\">.</span>com/davidrjenni/reftools/cmd/fillstruct\ngo install github<span class=\"token punctuation\">.</span>com/haya14busa/goplay/cmd/goplay</code></pre></div>\n<p>执行完后重启 VS Code 即可。</p>\n<p><img src=\"/img/Gopher-ru.png\" alt=\"\"></p>"},"next":{"id":"9d8f1386-fb6a-5704-bea4-6ea612419aa9","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">基本概念</a></p>\n<ul>\n<li><a href=\"#%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%BB%84%E6%88%90\">定义及组成</a></li>\n<li><a href=\"#arm-%E7%9A%84%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84\">ARM 的硬件结构</a></li>\n<li><a href=\"#linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84\">Linux 文件系统结构</a></li>\n<li><a href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\">常用命令</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">开发环境</a></p>\n<ul>\n<li>\n<p><a href=\"#gcc-%E7%9A%84%E4%BD%BF%E7%94%A8\">GCC 的使用</a></p>\n</li>\n<li>\n<p><a href=\"#gdb-%E7%9A%84%E4%BD%BF%E7%94%A8\">GDB 的使用</a></p>\n</li>\n<li>\n<p><a href=\"#qt-%E7%9A%84%E7%AE%80%E5%8D%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\">QT 的简单程序设计</a></p>\n</li>\n<li>\n<p><a href=\"#sql-%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AE%89%E8%A3%85\">SQL 结构化查询语言的安装</a></p>\n</li>\n<li>\n<p><a href=\"#minicom-%E7%9A%84%E9%85%8D%E7%BD%AE\">minicom 的配置</a></p>\n</li>\n<li>\n<p><a href=\"#busybox-%E5%AE%89%E8%A3%85\">BusyBox 安装</a></p>\n</li>\n<li>\n<p><a href=\"#qt-%E7%9A%84%E5%AE%89%E8%A3%85\">QT 的安装</a></p>\n</li>\n<li>\n<p><a href=\"#nfs\">NFS</a></p>\n</li>\n<li>\n<p><a href=\"#tftp\">TFTP</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AD%97%E7%AC%A6%E8%AE%BE%E5%A4%87%E7%9A%84%E4%BB%A3%E7%A0%81\">字符设备的代码</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%8C%89%E9%94%AE%E9%A9%B1%E5%8A%A8\">按键驱动</a></p>\n</li>\n<li>\n<p><a href=\"#led-%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD\">LED 驱动程序的动态加载</a></p>\n</li>\n<li>\n<p><a href=\"#makefile-%E6%B3%A8%E9%87%8A%E6%A0%B7%E4%BE%8B\">makefile 注释样例</a></p>\n<ul>\n<li><a href=\"#%E6%A0%B7%E4%BE%8B-1\">样例 1</a></li>\n<li><a href=\"#%E6%A0%B7%E4%BE%8B-2\">样例 2</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","timeToRead":7,"excerpt":"基本概念 定义及组成 嵌入式系统是以应用为中心，以计算机技术为基础，软硬件可裁剪，适应应用系统对功能、可靠性、成本、体积、功耗有严格要求的专用型计算机系统 组成：嵌入式微处理器、外围硬件设备、嵌入式操作系统、特定的应用程序 三要素：嵌入性、专用性、计算机系统 嵌入式系统的开发模式分为：本地开发和交…","fields":{"slug":"/articles/start-linux"},"frontmatter":{"title":"嵌入式「Linux」基础","author":"赤琦","date":"January 06, 2019","original":null,"description":null,"draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["Linux","嵌入式"]},"headings":[{"id":"基本概念","value":"基本概念","depth":2},{"id":"定义及组成","value":"定义及组成","depth":3},{"id":"arm-的硬件结构","value":"ARM 的硬件结构","depth":3},{"id":"linux-文件系统结构","value":"Linux 文件系统结构","depth":3},{"id":"常用命令","value":"常用命令","depth":3},{"id":"开发环境","value":"开发环境","depth":2},{"id":"gcc-的使用","value":"GCC 的使用","depth":3},{"id":"gdb-的使用","value":"GDB 的使用","depth":3},{"id":"qt-的简单程序设计","value":"QT 的简单程序设计","depth":3},{"id":"sql-结构化查询语言的安装","value":"SQL 结构化查询语言的安装","depth":3},{"id":"minicom-的配置","value":"minicom 的配置","depth":3},{"id":"busybox-安装","value":"BusyBox 安装","depth":3},{"id":"qt-的安装","value":"QT 的安装","depth":3},{"id":"nfs","value":"NFS","depth":3},{"id":"tftp","value":"TFTP","depth":3},{"id":"字符设备的代码","value":"字符设备的代码","depth":3},{"id":"按键驱动","value":"按键驱动","depth":3},{"id":"led-驱动程序的动态加载","value":"LED 驱动程序的动态加载","depth":3},{"id":"makefile-注释样例","value":"makefile 注释样例","depth":3},{"id":"样例-1","value":"样例 1","depth":4},{"id":"样例-2","value":"样例 2","depth":4}],"wordCount":{"words":362,"sentences":123,"paragraphs":123},"html":"<h2 id=\"基本概念\" style=\"position:relative;\"><a href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\" aria-label=\"基本概念 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本概念</h2>\n<h3 id=\"定义及组成\" style=\"position:relative;\"><a href=\"#%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%BB%84%E6%88%90\" aria-label=\"定义及组成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>定义及组成</h3>\n<ul>\n<li>\n<p>嵌入式系统是以<strong>应用</strong>为中心，以计算机技术为基础，软硬件可裁剪，适应应用系统对功能、可靠性、成本、体积、功耗有严格要求的专用型计算机系统</p>\n</li>\n<li>\n<p>组成：嵌入式微处理器、外围硬件设备、嵌入式操作系统、特定的应用程序</p>\n</li>\n<li>\n<p>三要素：<strong>嵌入性</strong>、<strong>专用性</strong>、<strong>计算机系统</strong></p>\n</li>\n<li>\n<p>嵌入式系统的开发模式分为：本地开发和交叉开发</p>\n</li>\n<li>\n<p>构建交叉编译环境的主要内容：构建交叉编译器、串口、网络的通信方式</p>\n</li>\n<li>\n<p>构建交叉编译环境的硬件设备：JTAG 线、串口、网络线</p>\n</li>\n<li>\n<p>串口的作用：实现双向通信</p>\n</li>\n<li>\n<p>网络的作用：实验资源共享和数据通信</p>\n</li>\n<li>\n<p>系统设备驱动的分类：</p>\n<ul>\n<li>\n<p>字符类设备：例如键盘、LED 等，目的是为了操作方便</p>\n</li>\n<li>\n<p>块设备：FLASH、DOC 等，经过缓存，给系统的存储提供优化</p>\n</li>\n<li>\n<p>网络设备：实现多个系统通信</p>\n</li>\n<li>\n<p>其他设备</p>\n</li>\n</ul>\n</li>\n<li>\n<p>设备驱动的基本结构：</p>\n<ul>\n<li>\n<p>驱动程序的注册和注销</p>\n</li>\n<li>\n<p>设备的打开与释放</p>\n</li>\n<li>\n<p>设备的读写操作</p>\n</li>\n<li>\n<p>设备的控制操作</p>\n</li>\n<li>\n<p>设备的中断和轮询处理</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"arm-的硬件结构\" style=\"position:relative;\"><a href=\"#arm-%E7%9A%84%E7%A1%AC%E4%BB%B6%E7%BB%93%E6%9E%84\" aria-label=\"arm 的硬件结构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ARM 的硬件结构</h3>\n<ul>\n<li>\n<p>ARM 是 32 位 <strong>RISC</strong> 处理器</p>\n</li>\n<li>\n<p>类型：ARM 710 系列、ARM 940T、920T 系列、StrongARM</p>\n</li>\n<li>\n<p>S3C6410 有 <strong>10</strong> 组外部中断，有 17 组外部 I/O 引脚,GPA ~ GPQ</p>\n</li>\n<li>\n<p>S3C6410 寄存器：</p>\n<ul>\n<li>\n<p>GPxCON：端口配置寄存器</p>\n</li>\n<li>\n<p>GPxDAT：端口数据寄存器</p>\n</li>\n<li>\n<p>GPxPUD：上/下拉寄存器</p>\n</li>\n<li>\n<p>GPxCONSLP：睡眠模式配置寄存器</p>\n</li>\n<li>\n<p>GPxPUDSLP：睡眠模式上/下拉寄存器</p>\n</li>\n</ul>\n</li>\n<li>\n<p>S3C6410 的中断控制寄存器类型：<strong>EINT 控制寄存器</strong>；其工作模式是：<strong>高/低电平</strong></p>\n</li>\n<li>\n<p>BootLoader 的两种模式：启动加载模式和下载模式</p>\n<ul>\n<li>\n<p>作用：在操作系统内核运行之前，初始硬件设备，建立内存的寻址空间映射，划出操作系统的内存地址范围，加载操作系统到 RAM 中让系统自举启动</p>\n</li>\n<li>\n<p>Stage 1：</p>\n<p>1、 硬件设备的初始化：屏蔽所有中断、设置 CPU 速度和时钟频率、RAM 地址的初始化</p>\n<p>2、 初始化 Stage 2 的内存地址范围</p>\n<p>3、 加载 Stage 2 到 RAM 中</p>\n<p>4、 设置堆栈</p>\n<p>5、 跳转到 Stage 2 的 c 入口</p>\n</li>\n<li>\n<p>Stage 2：</p>\n<p>1、 初始化需要用到的硬件设备</p>\n<p>2、 检测系统的内存映射</p>\n<p>3、 将 kernel 映像和根文件系统映像加载到 RAM</p>\n<p>4、 设置启动参数</p>\n<p>5、 调用内核</p>\n</li>\n</ul>\n</li>\n<li>\n<p>移植：将源代码编译到不同的硬件设备平台运行</p>\n<ul>\n<li>\n<p>内核移植：根据硬件平台对内核进行增加模块、裁剪、配置并重新编译以实现对硬件平台的支持</p>\n<p>1、 修改 Kconfig 文件</p>\n<p>2、 修改 makefile 文件</p>\n<p>3、 make menuconfig 配置</p>\n<p>4、 make zimage 生成映像</p>\n<p>5、 烧写映像文件到开发板</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"linux-文件系统结构\" style=\"position:relative;\"><a href=\"#linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84\" aria-label=\"linux 文件系统结构 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linux 文件系统结构</h3>\n<ul>\n<li>\n<p>/bin 存放二进制文件和普通用户常用的命令</p>\n</li>\n<li>\n<p>/boot 存放内核和引导文件（例如 GRUB）</p>\n</li>\n<li>\n<p>/dev 存放设备文件</p>\n</li>\n<li>\n<p>/etc 存放系统配置文件，该目录有重要文件，例如<code class=\"language-text\">init.d</code></p>\n</li>\n<li>\n<p>/home 普通用户的默认目录</p>\n</li>\n<li>\n<p>/lib 存放库文件</p>\n</li>\n<li>\n<p>/lost+found 存放系统奔溃或者意外关机产生的碎片文件</p>\n</li>\n<li>\n<p>/mnt 存储设备的挂载目录</p>\n</li>\n<li>\n<p>/opt 可选目录，即用户可以自定义的安装目录</p>\n</li>\n<li>\n<p>/proc 系统运行时的内核和进程信息</p>\n</li>\n<li>\n<p>/root 超级权限 root 用户的目录</p>\n</li>\n<li>\n<p>/sbin 存放仅超级权限用户可以执行的管理系统的命令</p>\n</li>\n<li>\n<p>/tmp 存放程序运行时的临时文件</p>\n</li>\n<li>\n<p>/usr 系统存放与程序相关的文件</p>\n</li>\n<li>\n<p>/sys 存放系统核心文件</p>\n</li>\n<li>\n<p>/media 用于挂载</p>\n</li>\n<li>\n<p>/cdrom 光驱目录</p>\n</li>\n<li>\n<p>/var 大文件的溢出区</p>\n</li>\n<li>\n<p>/usr/local 默认的编译安装目录</p>\n</li>\n</ul>\n<h3 id=\"常用命令\" style=\"position:relative;\"><a href=\"#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\" aria-label=\"常用命令 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常用命令</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> bg.png img\n<span class=\"token comment\"># 复制 bg.png 到 img 目录下</span>\n\n<span class=\"token function\">mv</span> costom.css css/index.css\n<span class=\"token comment\"># 移动 custom.css 文件到 css 目录下 并重命名为 index.css</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/\n<span class=\"token comment\"># 放回上一级目录</span>\n\n<span class=\"token function\">ls</span>\n<span class=\"token comment\"># 列出所有目录和文件</span>\n\n<span class=\"token function\">mkdir</span> xxx\n<span class=\"token comment\"># 新建 xxx 目录</span>\n\n<span class=\"token function\">rmdir</span> xxx\n<span class=\"token comment\"># 删除 xxx 目录</span>\n\n<span class=\"token function\">man</span> <span class=\"token function\">rm</span>\n<span class=\"token comment\"># 查看 rm 命令的帮助文档</span>\n\n<span class=\"token builtin class-name\">pwd</span>\n<span class=\"token comment\"># 列出工作路径</span>\n\n<span class=\"token function\">find</span> xxx\n<span class=\"token comment\"># 查找 xxx 文件</span>\n\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> xxx\n<span class=\"token comment\"># 强制删除 xxx 目录所有内容</span>\n\n<span class=\"token function\">ifconfig</span>\n<span class=\"token comment\"># 列出网卡配置（同时也可以配置）</span>\n\n<span class=\"token function\">ping</span> xxx\n<span class=\"token comment\"># 网络链路测试</span>\n\nlsmod\n<span class=\"token comment\"># 列出模块</span>\n\ninsmod xxx\n<span class=\"token comment\"># 安装模块</span>\n\nrmmod xxx\n<span class=\"token comment\"># 移除模块</span>\n\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> xxx.tar.gz\n<span class=\"token comment\"># 解压 xxx.tar.gz</span>\n\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-jxvf</span> xxx.tar.bz2\n<span class=\"token comment\"># 解压 xxx.tar.bz2</span>\n</code></pre></div>\n<h2 id=\"开发环境\" style=\"position:relative;\"><a href=\"#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\" aria-label=\"开发环境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发环境</h2>\n<h3 id=\"gcc-的使用\" style=\"position:relative;\"><a href=\"#gcc-%E7%9A%84%E4%BD%BF%E7%94%A8\" aria-label=\"gcc 的使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GCC 的使用</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gcc <span class=\"token parameter variable\">-E</span> main.c <span class=\"token parameter variable\">-o</span> main.i\n<span class=\"token comment\"># 预处理时停止</span>\n\ngcc <span class=\"token parameter variable\">-S</span> main.i <span class=\"token parameter variable\">-o</span> main.s\n<span class=\"token comment\"># 编译到汇编阶段停止</span>\n\ngcc <span class=\"token parameter variable\">-c</span> main.s <span class=\"token parameter variable\">-o</span> main.o\n<span class=\"token comment\"># 汇编成目标文件</span>\n\ngcc main.o <span class=\"token parameter variable\">-o</span> main\n<span class=\"token comment\"># 链接成为可执行的二进制文件</span>\n</code></pre></div>\n<h3 id=\"gdb-的使用\" style=\"position:relative;\"><a href=\"#gdb-%E7%9A%84%E4%BD%BF%E7%94%A8\" aria-label=\"gdb 的使用 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GDB 的使用</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gcc <span class=\"token parameter variable\">-Wall</span> <span class=\"token parameter variable\">-g</span> main.c <span class=\"token parameter variable\">-o</span> main\n\ngdb <span class=\"token parameter variable\">-q</span> main\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> l\n<span class=\"token comment\"># 列出源程序</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> b 行号\n<span class=\"token comment\"># 在某行断点</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> n\n<span class=\"token comment\"># 执行下一单步</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> r\n<span class=\"token comment\"># 继续执行</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> p xxx\n<span class=\"token comment\"># 打印 xxx 的值</span>\n<span class=\"token punctuation\">(</span>gdb<span class=\"token punctuation\">)</span> q\n<span class=\"token comment\"># 推出</span>\n</code></pre></div>\n<h3 id=\"qt-的简单程序设计\" style=\"position:relative;\"><a href=\"#qt-%E7%9A%84%E7%AE%80%E5%8D%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\" aria-label=\"qt 的简单程序设计 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QT 的简单程序设计</h3>\n<p>QT 是一个跨平台的 C++ 的图形用户界面库</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> xxx.c\n<span class=\"token comment\"># 创建 QT 程序</span>\n\nqmake <span class=\"token parameter variable\">-project</span>\n<span class=\"token comment\"># 生成 .pro 的专案文件</span>\n\nqmake\n<span class=\"token comment\"># 生成 makefile 文件</span>\n\n<span class=\"token function\">make</span>\n<span class=\"token comment\"># 执行编译</span></code></pre></div>\n<h3 id=\"sql-结构化查询语言的安装\" style=\"position:relative;\"><a href=\"#sql-%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80%E7%9A%84%E5%AE%89%E8%A3%85\" aria-label=\"sql 结构化查询语言的安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SQL 结构化查询语言的安装</h3>\n<p>安装 SQLite</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">示范包: sqlite.tar.gz\n\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zvxf</span> sqlite.tar.gz\n\n<span class=\"token builtin class-name\">cd</span> sqlite\n\n./configure <span class=\"token parameter variable\">--host</span><span class=\"token operator\">=</span>arm-linux <span class=\"token parameter variable\">--prefix</span><span class=\"token operator\">=</span>/opt/sqlite --disable-tcl\n\n<span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\n<span class=\"token function\">cp</span> <span class=\"token parameter variable\">-f</span> /opt/sqlite/bin /mnt/s3c6410/bin\n\n<span class=\"token function\">cp</span> <span class=\"token parameter variable\">-f</span> /opt/sqlite/lib /mnt/s3c6410/lib\n\n<span class=\"token comment\"># 切换到开发板的终端</span>\n\nsqlite3</code></pre></div>\n<h3 id=\"minicom-的配置\" style=\"position:relative;\"><a href=\"#minicom-%E7%9A%84%E9%85%8D%E7%BD%AE\" aria-label=\"minicom 的配置 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>minicom 的配置</h3>\n<p>目标板与宿主机相连：PC COM ——》 ARM UART0</p>\n<p>运行终端</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">minicom</code></pre></div>\n<p>按下 o 键，进行串口的配置。其中波特率为 115200，8bit，无流控制</p>\n<p>保存，退出</p>\n<h3 id=\"busybox-安装\" style=\"position:relative;\"><a href=\"#busybox-%E5%AE%89%E8%A3%85\" aria-label=\"busybox 安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BusyBox 安装</h3>\n<p>1、 获取源码包，示范 busybox.tar.bz2</p>\n<p>2、 解压源码包 <code class=\"language-text\">tar -jxvf busybox.tar.bz2</code></p>\n<p>3、 <code class=\"language-text\">cd busybox &amp;&amp; make menuconfig</code> 配置</p>\n<p>4、 <code class=\"language-text\">make CORSS_COMPILE = arm-none-linux-gnueabi-</code> 配置编译</p>\n<p>5、 <code class=\"language-text\">make install</code> 安装</p>\n<h3 id=\"qt-的安装\" style=\"position:relative;\"><a href=\"#qt-%E7%9A%84%E5%AE%89%E8%A3%85\" aria-label=\"qt 的安装 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>QT 的安装</h3>\n<p>1、 获取源码包，示范 qt.tar.gz</p>\n<p>2、 解压源码包到当前目录 <code class=\"language-text\">tar -zxvf qt.tar.gz</code></p>\n<p>3、 <code class=\"language-text\">cd qt &amp;&amp; ./configure -embedded [architechture] --prefix=/opt/qt</code></p>\n<p>4、 <code class=\"language-text\">make &amp;&amp; make install</code></p>\n<p>5、 设置环境变量 <code class=\"language-text\">export PATH=$PATH:/opt/qt/bin &amp;&amp; source .bash_profile</code></p>\n<p>6、 <code class=\"language-text\">which qmake</code></p>\n<h3 id=\"nfs\" style=\"position:relative;\"><a href=\"#nfs\" aria-label=\"nfs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NFS</h3>\n<p>1、 <code class=\"language-text\">setup</code> system service 选 nfs</p>\n<p>2、 退出 setup <code class=\"language-text\">vi /etc/exports</code></p>\n<p>3、 <code class=\"language-text\">service nfs restart</code></p>\n<p>4、 <code class=\"language-text\">ifconfig</code> 查看网卡获得 ip</p>\n<p>5、 <code class=\"language-text\">mount ip：</code></p>\n<h3 id=\"tftp\" style=\"position:relative;\"><a href=\"#tftp\" aria-label=\"tftp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TFTP</h3>\n<p>1、 <code class=\"language-text\">setup</code> system service 选 tftp</p>\n<p>2、 去掉 ipchains 和 iptables</p>\n<p>3、 Firewall configuration 选 Nofirewall</p>\n<p>4、 退出 setup <code class=\"language-text\">service xinetd restart</code></p>\n<h3 id=\"字符设备的代码\" style=\"position:relative;\"><a href=\"#%E5%AD%97%E7%AC%A6%E8%AE%BE%E5%A4%87%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-label=\"字符设备的代码 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>字符设备的代码</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">file_operations</span> keybd_fops <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    open <span class=\"token operator\">:</span> keybd_open<span class=\"token punctuation\">,</span>\n    read <span class=\"token operator\">:</span> keybd_read<span class=\"token punctuation\">,</span>\n    release <span class=\"token operator\">:</span> keybd_release<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">keybd_open</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">inode</span> <span class=\"token operator\">*</span>inode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>filp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"open ok\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">ssize_t</span> <span class=\"token function\">keybd_read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">,</span>\n                   <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ……\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">keybd_release</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">inode</span> <span class=\"token operator\">*</span>inode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>filp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"release ok\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token class-name\">ssize_t</span> <span class=\"token function\">led_write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">,</span>\n                  <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ……\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> __init <span class=\"token function\">keybd_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ……\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> __exit <span class=\"token function\">keybd_exit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">devfs_unregister</span><span class=\"token punctuation\">(</span>devfs_keybd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">module_init</span><span class=\"token punctuation\">(</span>keybd_init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">module_exit</span><span class=\"token punctuation\">(</span>keybd_exit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"按键驱动\" style=\"position:relative;\"><a href=\"#%E6%8C%89%E9%94%AE%E9%A9%B1%E5%8A%A8\" aria-label=\"按键驱动 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>按键驱动</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// 初始化设备，将引脚设置为中断模式</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">init_dev</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">s3c_gpio_cfgpin</span><span class=\"token punctuation\">(</span>key_table<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">S3C_GPIO_SFN</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> tmp<span class=\"token punctuation\">;</span>\n    tmp <span class=\"token operator\">=</span> <span class=\"token function\">readl</span><span class=\"token punctuation\">(</span>S3C64XX_GPNCON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%x\\n\"</span><span class=\"token punctuation\">,</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 请求中断</span>\nret <span class=\"token operator\">=</span> <span class=\"token function\">request_irq</span><span class=\"token punctuation\">(</span>key_irqs<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>irq<span class=\"token punctuation\">,</span> keys_interrupt<span class=\"token punctuation\">,</span> key_irqs<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">,</span> key_irqs<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>key_irqs<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 等待中断触发事件</span>\n<span class=\"token function\">wait_event_interruptible</span><span class=\"token punctuation\">(</span>key_waitq<span class=\"token punctuation\">,</span> ev_press<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//当中断发生时，调用中断处理函数。当外部中断发生时，request_irq()当中最后一个参数将提供给中断处理函数</span>\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">irqreturn_t</span> <span class=\"token function\">keys_interrupt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> irq<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>dev_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">key_irq</span> <span class=\"token operator\">*</span>key_irqs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">key_irq</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dev_id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> down<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> number<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> tmp<span class=\"token punctuation\">;</span>\n\n    number <span class=\"token operator\">=</span> key_irqs<span class=\"token operator\">-></span>number<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"number = %d\\n\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n        tmp <span class=\"token operator\">=</span> <span class=\"token function\">readl</span><span class=\"token punctuation\">(</span>S3C64XX_GPNDAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        down <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        down <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>down <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span>key_values<span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        key_values<span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">+</span> down<span class=\"token punctuation\">;</span>\n        ev_press <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">wake_up_interruptible</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>key_waitq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"interrupt\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">IRQ_RETVAL</span><span class=\"token punctuation\">(</span>IRQ_HANDLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 释放中断</span>\n<span class=\"token function\">free_irq</span><span class=\"token punctuation\">(</span>key_irqs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>irq<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>key_irqs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h3 id=\"led-驱动程序的动态加载\" style=\"position:relative;\"><a href=\"#led-%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD\" aria-label=\"led 驱动程序的动态加载 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LED 驱动程序的动态加载</h3>\n<p>1、 开发板上电，进入 NFS</p>\n<p>2、 将 led_app 和 led.ko 拷贝到挂载的 NFS 文件系统中</p>\n<p>3、 切换到串口终端 <code class=\"language-text\">ls</code> 查看是否拷贝成功</p>\n<p>4、 动态加载驱动代码 <code class=\"language-text\">insmod led.ko</code></p>\n<p>5、 查看驱动设备号 <code class=\"language-text\">cat /proc/devices</code></p>\n<p>6、 根据驱动设备号创建设备文件 <code class=\"language-text\">mknod /dev/myled c 253 0</code></p>\n<p>7、 <code class=\"language-text\">./led_app 1</code> 来测试灯是否亮；<code class=\"language-text\">./led_app 0</code> 测试关闭灯</p>\n<h3 id=\"makefile-注释样例\" style=\"position:relative;\"><a href=\"#makefile-%E6%B3%A8%E9%87%8A%E6%A0%B7%E4%BE%8B\" aria-label=\"makefile 注释样例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>makefile 注释样例</h3>\n<h4 id=\"样例-1\" style=\"position:relative;\"><a href=\"#%E6%A0%B7%E4%BE%8B-1\" aria-label=\"样例 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>样例 1</h4>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\"><span class=\"token target symbol\">edit</span><span class=\"token punctuation\">:</span> main.o kbd.o command.o\n<span class=\"token comment\"># 定义目标文件 edit 和源文件 main.o 等</span>\n    gcc -o edit main.o kbd.o command.o\n    <span class=\"token comment\">#定义 edit 的编译方法</span>\n<span class=\"token target symbol\">main.o</span><span class=\"token punctuation\">:</span> main.c defs.h\n<span class=\"token comment\"># 定义目标文件 main.o 和源文件 main.c defs.h</span>\n    gcc -c main.c\n    <span class=\"token comment\"># 定义 main.o 的编译方法</span>\n<span class=\"token target symbol\">kbd.o</span><span class=\"token punctuation\">:</span> kbd.c defs.h command.h\n<span class=\"token comment\"># 定义目标文件kbd.o和源文件</span>\n    gcc -c kbd.c\n    <span class=\"token comment\"># 定义 kbd.o 的编译方法</span>\n<span class=\"token target symbol\">command.o</span><span class=\"token punctuation\">:</span> command.c defs.h command.h\n<span class=\"token comment\"># 定义目标文件command.o和源文件</span>\n    gcc -c command.c\n    <span class=\"token comment\"># 定义 command.p 的编译方法</span>\n<span class=\"token target symbol\">clean</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 定义伪目标</span>\n    rm edit main.o kbd.o command.o display.o insert.o\n    <span class=\"token comment\"># 删除目标文件</span></code></pre></div>\n<h4 id=\"样例-2\" style=\"position:relative;\"><a href=\"#%E6%A0%B7%E4%BE%8B-2\" aria-label=\"样例 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>样例 2</h4>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\">CC <span class=\"token operator\">=</span> /opt/host/armv4l/bin/armv4l-unknown-linux-gcc\n<span class=\"token comment\"># 定义 gcc</span>\nLD <span class=\"token operator\">=</span> /opt/host/armv4l/bin/armv4l-unknown-linux-ld\n<span class=\"token comment\"># 定义 ld</span>\nCFLAGS <span class=\"token operator\">=</span> -I/HHARM9-EDU/kernel/<span class=\"token keyword\">include</span>/linux -Wall\n<span class=\"token comment\"># 定义编译选项</span>\n<span class=\"token target symbol\">led.o</span><span class=\"token punctuation\">:</span> led.c\n<span class=\"token comment\"># 定义目标和源文件</span>\n    <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CC<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CFLAGS<span class=\"token punctuation\">)</span> -g led.c -o led\n    <span class=\"token comment\"># 编译方法</span>\n    cp led.o / -f\n    <span class=\"token comment\"># 复制 led.o 到 /</span>\n<span class=\"token builtin-target builtin\">.PHONY</span><span class=\"token punctuation\">:</span> clean\n<span class=\"token comment\"># 定义伪目标</span>\n<span class=\"token target symbol\">clean</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\"># 定义clean</span>\n    -rm -f *.o\n    <span class=\"token comment\"># 删除中间文件</span></code></pre></div>"},"previous":{"id":"7c263d87-cc9e-5031-bb7c-ac8a818a42f6","tableOfContents":"<ul>\n<li><a href=\"#git-large-file-storage\">Git Large File Storage</a></li>\n<li><a href=\"#remove-git-lfs\">Remove Git LFS</a></li>\n</ul>","timeToRead":1,"excerpt":"Git Large File Storage Git Large File Storage (LFS) 是一种能够将 Repository 中的各种非代码格式文件转化为指针跟踪存储的方式。它能有效的减少每次 pull 和 push 的 size，同时也减少了仓库的资源占用。具体介绍详见GitHub…","fields":{"slug":"/articles/remove-git-lfs"},"frontmatter":{"title":"从仓库取消使用「Git LFS」跟踪大型媒体文件","author":"赤琦","date":"September 02, 2019","original":null,"description":null,"draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["Git","Git LFS"]},"headings":[{"id":"git-large-file-storage","value":"Git Large File Storage","depth":3},{"id":"remove-git-lfs","value":"Remove Git LFS","depth":3}],"wordCount":{"words":67,"sentences":8,"paragraphs":8},"html":"<h3 id=\"git-large-file-storage\" style=\"position:relative;\"><a href=\"#git-large-file-storage\" aria-label=\"git large file storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git Large File Storage</h3>\n<p>Git Large File Storage (LFS) 是一种能够将 Repository 中的各种非代码格式文件转化为指针跟踪存储的方式。它能有效的减少每次 pull 和 push 的 size，同时也减少了仓库的资源占用。具体介绍详见<a href=\"https://git-lfs.github.com/\">GitHub 的官网指南</a>。</p>\n<h3 id=\"remove-git-lfs\" style=\"position:relative;\"><a href=\"#remove-git-lfs\" aria-label=\"remove git lfs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove Git LFS</h3>\n<p>由于静态网站自动化部署和 GitHub API 自身的原因不能托管使用了<strong>Git LFS</strong>的 Repository。一番 Google 后没有获得有用的操作步骤。此后无意间操作成功 remove 了这个高级操作……</p>\n<ol>\n<li>\n<p>先对你的 Repository 执行 <code class=\"language-text\">git lfs pull</code> 或者 <code class=\"language-text\">git lfs fetch</code>，确保本地的指针文件替换成你的文件</p>\n</li>\n<li>\n<p>删除目录下所有 <strong>.gitattributes</strong> 跟踪文件</p>\n</li>\n<li>\n<p><strong>关键</strong>：执行 <code class=\"language-text\">git rm --cached *</code>，其中 —cached 属性必不可少，该命令会刷新所有 Git 记录的文件缓存</p>\n</li>\n<li>\n<p>这时你会发现你刷新了整个 Git 记录，提示需要 add 所有的 change，不要惊慌，此时直接<code class=\"language-text\">git add .</code>并 commit 记录就可以了，到这里就已经移除了 Git LFS</p>\n</li>\n</ol>"}}},"staticQueryHashes":["265691001","4024388462"],"slicesMap":{}}