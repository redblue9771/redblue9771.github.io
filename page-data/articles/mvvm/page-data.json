{"componentChunkName":"component---src-pages-articles-markdown-remark-parent-file-name-index-tsx","path":"/articles/mvvm/","result":{"data":{"markdownRemark":{"id":"4883cb65-1223-5cad-8209-2aa0bba20f2c","tableOfContents":"<ul>\n<li><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-mvvm%EF%BC%9F\">什么是 MVVM？</a></li>\n<li><a href=\"#mvvm-%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%90%91\">MVVM 的通信方向</a></li>\n</ul>","timeToRead":1,"excerpt":"什么是 MVVM？ MVVM 是 Model-View-ViewModel 的简写。它最早是由微软（Microsoft）为分离模型（Model）和视图（View）而提出来的 WPF 技术结合 MVP 模式演变而来。 MVVM 的通信方向 以往 MVC 模式的操作方式是获取 DOM 对象，再对 DO…","fields":{"slug":"/articles/mvvm"},"frontmatter":{"title":"「小程序」简述 MVVM 模式","author":"赤琦","date":"May 03, 2018","original":null,"description":"最近在学习开发微信小程序，其中用到了 MVVM 模式，与常见的 MVC 模式有所区别，简述其来备忘。","draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["MVVM","小程序","软件模型"]},"headings":[{"id":null,"value":"什么是 MVVM？","depth":2},{"id":null,"value":"MVVM 的通信方向","depth":2}],"wordCount":{"words":79,"sentences":8,"paragraphs":8},"html":"<h2>什么是 MVVM？</h2>\n<p>MVVM 是 Model-View-ViewModel 的简写。它最早是由微软（Microsoft）为分离模型（Model）和视图（View）而提出来的 WPF 技术结合 MVP 模式演变而来。</p>\n<h2>MVVM 的通信方向</h2>\n<p>以往 MVC 模式的操作方式是获取 DOM 对象，再对 DOM 对象进行变化。举个栗子：HTML 代码</p>\n<pre><code class=\"language-html\">&#x3C;p class=\"test\">redblue&#x3C;/p>\n</code></pre>\n<p>我们采用 JQury 对它的内容操作为</p>\n<pre><code class=\"language-js\">$(\".test'\").text('spirit.redblue.cf')\n</code></pre>\n<p>是的，我相信你非常容易理解。那么采用 MVVM 要怎样操作尼？同样对于刚刚的 HTML 源码</p>\n<pre><code class=\"language-html\">&#x3C;p class=\"test\">{{obj.name}}&#x3C;/p>\r\n//这里必须申明：假设{{数据名}}这样是获取数据内容并且定义有： // var obj = { //\r\nname:\"redblue\" //} //那么，现在这句话就等同于\r\n&#x3C;p class=\"test\">redblue&#x3C;/p>\n</code></pre>\n<p>对于修改这个我们很容易就这样做</p>\n<pre><code class=\"language-js\">obj.name = 'spirit.redblue.cf'\n</code></pre>\n<p>这时候在没有获取 DOM 对象的情况下就对 View 视图重新渲染。这也就是 ViewModel 所起到的中间作用，即 Model 可以通过影响 ViewModel 来间接变化 View。这就是其最大的区别。当然，视图（View）可以独立于 Model 变化和修改，一个 ViewModel 可以绑定到不同的 View 上，当 View 变化的时候 Model 可以不变，当 Model 变化的时候 View 也可以不变，也就是低耦合性。</p>"}},"pageContext":{"id":"4883cb65-1223-5cad-8209-2aa0bba20f2c","parent__name":"mvvm","__params":{"parent__name":"mvvm"}}},"staticQueryHashes":[]}