{"componentChunkName":"component---src-pages-articles-markdown-remark-parent-file-name-index-tsx","path":"/articles/csdn-noad/","result":{"data":{"markdownRemark":{"id":"57ce4156-3631-5689-a0f4-544577c4e7d5","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%85%B3%E4%BA%8E-csdn\">关于 CSDN</a></p>\n</li>\n<li>\n<p><a href=\"#%E9%92%88%E5%AF%B9%E5%8D%9A%E5%AE%A2%E8%AF%A6%E6%83%85%E9%A1%B5\">针对博客详情页</a></p>\n<ul>\n<li><a href=\"#%E5%8E%9F%E7%90%86\">原理</a></li>\n<li><a href=\"#%E8%A7%A3%E5%86%B3%E5%92%8C%E5%AE%9E%E7%8E%B0\">解决和实现</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E4%B8%8D%E6%AD%A2%E4%BA%8E-csdn-%E5%92%8C%E5%8E%BB%E5%B9%BF%E5%91%8A\">不止于 CSDN 和去广告</a></p>\n</li>\n</ul>","timeToRead":3,"excerpt":"关于 CSDN 不得不说 CSDN 博客页上聚集了大量的知识内容，可是深恶痛绝的是满屏的广告让你不能专注于博客内容，多的不说，一张图告诉你它的广告有多少  一个连搜索引擎检索的 SEO 关键都是广告词！吃惊！！！ 知乎关于 CSDN 的讨伐 针对博客详情页 其实有不少的替代方案：掘金，segmen…","fields":{"slug":"/articles/csdn-noad"},"frontmatter":{"title":"极短「CSS3」代码去 CSDN 广告","author":"赤琦","date":"August 13, 2018","original":null,"description":null,"draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["CSS","广告"]},"headings":[{"id":null,"value":"关于 CSDN","depth":2},{"id":null,"value":"针对博客详情页","depth":2},{"id":null,"value":"原理","depth":3},{"id":null,"value":"解决和实现","depth":3},{"id":null,"value":"不止于 CSDN 和去广告","depth":2}],"wordCount":{"words":117,"sentences":23,"paragraphs":23},"html":"<h2>关于 CSDN</h2>\n<p>不得不说 CSDN 博客页上聚集了大量的知识内容，可是深恶痛绝的是满屏的广告让你不能专注于博客内容，多的不说，一张图告诉你它的广告有多少</p>\n<p><img src=\"/img/CSDN.jpg\" alt=\"\"></p>\n<p>一个连搜索引擎检索的 SEO 关键都是广告词！吃惊！！！</p>\n<p><a href=\"https://www.zhihu.com/question/52061495\" title=\"https://www.zhihu.com/question/52061495\">知乎关于 CSDN 的讨伐</a></p>\n<h2>针对博客详情页</h2>\n<p>其实有不少的替代方案：掘金，segmentfault 等都是高质量的，可是一些比较偏的内容确实能在 CSDN 中快速检索得到，特别是经常百度一下全是 CSDN 的链接（：汗颜-，所以是免不了看它了，来吧，动手去广告</p>\n<h3>原理</h3>\n<p>利用插件在加载完毕的页面中加入定制样式以及脚本内容</p>\n<p>在 Chrome 商店检索到了<a href=\"https://github.com/stylish-userstyles/stylish/\">stylish</a>和<a href=\"https://github.com/openstyles/stylus\">stylus</a>用于 Custom CSS 的神器（油猴脚本也可以哦，转为 JavaScript 就好了）</p>\n<p>当然不仅仅用于 Chrome，上述插件在 FireFox、Opera、Safari、Edge 以及其他 WebKit 浏览器均有不同程度的支持，总之就是很方便了。P.S.:手机端也有，安卓 Yandex 等，不过我的代码适用于 PC 端，自行移植和修改定制</p>\n<h3>解决和实现</h3>\n<p><a href=\"https://userstyles.org\" title=\"https://userstyles.org\">https://userstyles.org</a>里面有非常多已经定制好的代码，可是我都不满意，他们均不能很好的除去广告，于是我就打算自己写</p>\n<p>一般的隐藏 HTML 元素大家想到的选择都是比较常见的，通过标签、样式等选中后隐藏。可是这样做的代价很大：一个网页内的元素太多造成选取困难，甚至还有动态改变的内容</p>\n<p>于是我就想能不能换个思路：既然我不能知道每个广告的位置，那么我就把除了文章的主要内容外的元素都隐藏，但是很快我就遇到了难题，CSS 好像没这样的选择器？</p>\n<p>于是打开 CSS 选择器文档发现了 <code>:not()</code> 选择器，也就是除了的意思。</p>\n<pre><code class=\"language-css\">div: not(p); // div下面的非p的所有标签\n</code></pre>\n<p>可是使用中发现要除去多个，习惯测试用逗号分隔无效（也就是有顺序，前面的隐藏了就选不到了）于是又疯狂的百度</p>\n<p>嘿嘿，原来 <code>:not()</code> 函数是可以并列的，可以说 CSS3 真的是好用，期待下下一代会有更优秀的选择器</p>\n<pre><code class=\"language-css\">div:not(p):not(a)   // div下面的除了p和a以外的所有标签\n</code></pre>\n<p>有了这个就好办了</p>\n<p>仅保留文章主要文字和相关文章，其他可自行扩展</p>\n<pre><code class=\"language-css\">// 首先去除所有文章页以外的内容\r\nbody {\r\n  background: url() #f2f2f2 !important;\r\n}\r\n\r\nbody > :not(#mainBox) {\r\n  display: none !important;\r\n}\r\n// 再将文章内文字部分保留（相当于去aside标签）\r\n#mainBox > :not(main) {\r\n  display: none !important;\r\n}\r\n// 去除评论以及部分广告\r\nmain > :not(.blog-content-box):not(.recommend-box):not(.hide-article-box) {\r\n  display: none !important;\r\n}\r\n// 去除相关文章内的广告\r\n.recommend-box > :not(.type_blog) {\r\n  display: none !important;\r\n}\r\n// 对文章居中显示\r\nmain {\r\n  position: absolute;\r\n  top: 3em;\r\n  left: 50%;\r\n  transform: translate3d(-50%, 0, 0);\r\n}\r\n// p 颜色控制\r\np {\r\n  color: #000 !important;\r\n}\n</code></pre>\n<p>效果图</p>\n<p><img src=\"/img/CSDN-1.jpg\" alt=\"\"></p>\n<h2>不止于 CSDN 和去广告</h2>\n<p>现在你完全可以使用 CSS 和 JavaScript 定制任何网站的样式，无广告百度，任何主题的 bilibili，享你所想！</p>\n<p>扩展阅读：<a href=\"http://www.w3school.com.cn/cssref/css_selectors.asp\">CSS3 选择器</a></p>"}},"pageContext":{"id":"57ce4156-3631-5689-a0f4-544577c4e7d5","parent__name":"csdn-noad","__params":{"parent__name":"csdn-noad"}}},"staticQueryHashes":[]}