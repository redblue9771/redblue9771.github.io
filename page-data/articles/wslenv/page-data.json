{"componentChunkName":"component---src-pages-articles-markdown-remark-parent-file-name-index-tsx","path":"/articles/wslenv/","result":{"data":{"markdownRemark":{"id":"3b43e8ad-6c65-5374-85a4-31ca0c1e2657","tableOfContents":"<ul>\n<li>\n<p><a href=\"#windows-%E4%B8%8B%E7%9A%84-linux-%E5%BC%80%E5%8F%91%E7%A5%9E%E5%99%A8\">Windows 下的 Linux 开发神器</a></p>\n<ul>\n<li>\n<p><a href=\"#-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8-linux\">💁🏻‍ 为什么要使用 Linux</a></p>\n</li>\n<li>\n<p><a href=\"#what-is-the-wsl-\">What is the WSL ?</a></p>\n</li>\n<li>\n<p><a href=\"#-%E7%AE%80%E5%8D%95%E4%B8%A4%E6%AD%A5%E5%BC%80%E5%90%AF-wsl\">🕵🏻 简单两步开启 WSL</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%E4%B8%80%E3%80%81%E5%90%AF%E7%94%A8-%E9%80%82%E7%94%A8%E4%BA%8E-linux-%E7%9A%84-windows-%E5%AD%90%E7%B3%BB%E7%BB%9F\">一、启用 适用于 Linux 的 Windows 子系统</a></li>\n<li><a href=\"#%E4%BA%8C%E3%80%81%E5%AE%89%E8%A3%85%E4%BD%A0%E5%96%9C%E6%AC%A2%E7%9A%84%E5%8F%91%E8%A1%8C%E7%89%88\">二、安装你喜欢的发行版</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-wsl-%E4%BD%BF%E7%94%A8%E3%80%81%E7%AE%A1%E7%90%86%E3%80%81%E5%9C%A8-vscode-%E4%B8%AD%E4%BD%BF%E7%94%A8\">💪🏻 WSL 使用、管理、在 VScode 中使用</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E8%AE%BF%E9%97%AE\">快速访问</a></li>\n<li><a href=\"#wsl-%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%81%E4%B8%8E-win-%E7%9A%84%E5%85%B3%E7%B3%BB\">WSL 的路径、与 win 的关系</a></li>\n<li><a href=\"#%E5%A4%9A%E5%88%86%E5%8F%91%E7%89%88%E9%85%8D%E7%BD%AE\">多分发版配置</a></li>\n<li><a href=\"#vscode-%E9%85%8D%E7%BD%AE\">VSCode 配置</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","timeToRead":5,"excerpt":"Windows 下的 Linux 开发神器 💁🏻‍ 为什么要使用 Linux 开源！ 开源 = 自由，于是世界上有 N 多个衍生版，种类丰富，可定制性强，直接操作内核。相比于 Windows、MacOs 闭源操作系统安全性较高。 你可能跟以前的我一样，对 Linux 的认识就是黑乎乎的 Terminal…","fields":{"slug":"/articles/wslenv"},"frontmatter":{"title":"「WSL」Windows 下的 Linux 开发环境","author":"赤琦","date":"November 13, 2018","original":null,"description":"包括怎么在 Windows 中使用 Linux、怎么设置 WSL/Bash/Linux shell 为 VScode 的默认终端、Code Runner 使用 WSL/Bash/Linux shell","draft":null,"slug":null,"categories":["develop"],"series":null,"tags":["开发环境","Linux","WSL"]},"headings":[{"id":null,"value":"Windows 下的 Linux 开发神器","depth":1},{"id":null,"value":"💁🏻‍ 为什么要使用 Linux","depth":2},{"id":null,"value":"What is the WSL ?","depth":2},{"id":null,"value":"🕵🏻 简单两步开启 WSL","depth":2},{"id":null,"value":"一、启用 适用于 Linux 的 Windows 子系统","depth":4},{"id":null,"value":"二、安装你喜欢的发行版","depth":4},{"id":null,"value":"💪🏻 WSL 使用、管理、在 VScode 中使用","depth":2},{"id":null,"value":"快速访问","depth":4},{"id":null,"value":"WSL 的路径、与 win 的关系","depth":4},{"id":null,"value":"多分发版配置","depth":4},{"id":null,"value":"VSCode 配置","depth":4}],"wordCount":{"words":306,"sentences":50,"paragraphs":50},"html":"<h1>Windows 下的 Linux 开发神器</h1>\n<h2>💁🏻‍ 为什么要使用 Linux</h2>\n<p><strong>开源！</strong></p>\n<p>开源 = 自由，于是世界上有 N 多个衍生版，种类丰富，可定制性强，直接操作内核。相比于 Windows、MacOs 闭源操作系统安全性较高。</p>\n<p>你可能跟以前的我一样，对 Linux 的认识就是黑乎乎的 Terminal 界面。其实现在的 Linux 由于开源具有超强的个性化，桌面版已经甩了 Windows 很远了，尽管如今的 Fluent Design 提高了微软的审美，但是 win10 中文字体在一些高 DPI 上还是硬伤。</p>\n<p>不知道你有没有这种经历：Windows 经常要<strong>重装</strong>，特别是喜欢折腾的人。每次重装一大堆配置需要安装。Linux 就容易了吗？当然，你只要一条<strong>命令</strong>就能安装大部分的开发环境，不需要复杂的配置。对于 Web 开发，或者是嵌入式等开发，Linux 的环境都是首选。</p>\n<h2>What is the WSL ?</h2>\n<p><strong>适用于 Linux 的 Windows 子系统「英语：Windows Subsystem for Linux，简称 WSL」</strong> 是一个为在 Windows 10 上能够原生运行 Linux 二进制可执行文件（ELF 格式）的兼容层。它是由微软与 Canonical 公司合作开发，目标是使纯正的 Ubuntu 14.04/18.04, OpenSUSE, Kali Linux 和 Debian 映像能下载和解压到用户的本地计算机，并且映像内的工具和实用工具能在此子系统上原生运行。</p>\n<p>WSL 提供了一个微软开发的 Linux 兼容内核接口（不包含 Linux 代码），来自 Ubuntu 的用户模式二进制文件在其上运行。</p>\n<p>该子系统不能运行所有 Linux 软件，例如那些图形用户界面，以及那些需要未实现的 Linux 内核服务的软件。 不过，这可以用在外部 X 服务器上运行的图形 X 窗口系统缓解。</p>\n<p><em>Tip：适用于 Windows 1607 (build 14316)及其以上版本，需要开启开发者模式，并且最好是专业版以上版本，具体支持情况请 Google</em></p>\n<h2>🕵🏻 简单两步开启 WSL</h2>\n<h4>一、启用 适用于 Linux 的 Windows 子系统</h4>\n<ol>\n<li>\n<p>控制面板</p>\n</li>\n<li>\n<p>程序和卸载</p>\n</li>\n<li>\n<p>启用或关闭 windows 功能</p>\n<p><a href=\"/img/wsl0.jpg\"><img src=\"/img/wsl0.jpg\" alt=\"\"></a></p>\n</li>\n<li>\n<p>找不到的话尝试开启开发者模式</p>\n<p>windows 设置 -> 更新与安全 -> 开发者模式</p>\n<p><a href=\"/img/wsl7.png\"><img src=\"/img/wsl7.png\" alt=\"\"></a></p>\n</li>\n<li>\n<p>重启系统</p>\n</li>\n</ol>\n<h4>二、安装你喜欢的发行版</h4>\n<ol>\n<li>\n<p>打开 Microsoft Store</p>\n</li>\n<li>\n<p>搜索 wsl</p>\n</li>\n<li>\n<p>安装你喜欢的任意发行版</p>\n<p><em>Windows 目前只提供 Debian 系的发行版，当然 SUSE 也很香</em></p>\n<p><a href=\"/img/wsl1.jpg\"><img src=\"/img/wsl1.jpg\" alt=\"\"></a></p>\n<p>🔥 推荐使用轻量、安全、快速、对 Web 开发友好的 Alpine Linux <a href=\"https://github.com/agowa338/WSL-DistroLauncher-Alpine\">https://github.com/agowa338/WSL-DistroLauncher-Alpine</a></p>\n</li>\n<li>\n<p>打开你的 Linux 会出现 installing ……</p>\n<p><em>安装失败可以重新打开，或者卸载重新安装，再或者重新开启一下 <a href=\"#%E5%90%AF%E7%94%A8-%E9%80%82%E7%94%A8%E4%BA%8E-linux-%E7%9A%84-windows-%E5%AD%90%E7%B3%BB%E7%BB%9F\">启用 适用于 Linux 的 Windows 子系统</a></em></p>\n</li>\n<li>\n<p>输入用户名、密码即可开启你的 Linux 之旅</p>\n</li>\n</ol>\n<h2>💪🏻 WSL 使用、管理、在 VScode 中使用</h2>\n<h4>快速访问</h4>\n<ul>\n<li>\n<p>快速启动 bash</p>\n<p>CMD 或者 PowerShell 中直接输入 bash 或者 wsl 回车</p>\n<p><a href=\"/img/wsl2.png\"><img src=\"/img/wsl2.png\" alt=\"\"></a></p>\n</li>\n<li>\n<p>运行 bash</p>\n<p>win + R 输入 bash 或者 wsl 回车</p>\n<p><a href=\"/img/wsl3.png\"><img src=\"/img/wsl3.png\" alt=\"\"></a></p>\n</li>\n<li>\n<p>在目录中快速打开</p>\n<p>在目录下<code>shift + 鼠标右键</code>即可快速调出<code>在此处打开 Linux Shell</code></p>\n<p><em>仅支持 Windows 1803 及以上</em></p>\n<p><a href=\"/img/wsl6.png\"><img src=\"/img/wsl6.png\" alt=\"\"></a></p>\n</li>\n</ul>\n<h4>WSL 的路径、与 win 的关系</h4>\n<p>WSL 的根目录 <code>%localappdata%\\Packages\\</code> + 含分发名的文件夹名 <code>+\\LocalState\\rootfs</code>。分发名字可通过搜索你的分发版名称找到。找到路径后可以对目录右键固定到快速访问以便使用。</p>\n<p><a href=\"/img/wsl4.jpg\"><img src=\"/img/wsl4.jpg\" alt=\"\"></a></p>\n<p>WSL 是与 Windows 共享磁盘、环境 PATH 的，在 wsl 中输入<code>export</code></p>\n<p><a href=\"/img/wsl5.png\"><img src=\"/img/wsl5.png\" alt=\"export 之后\"></a></p>\n<p>注意路径是挂载在 wsl 的 mnt 文件中，所有盘符都要替换。例如<code>D:/test => /mnt/d/test</code>。并且 wsl 中是可以直接打开 exe 的（实质是 Windows 打开的），但是 Windows 不能直接打开不带后缀名的二进制文件。PATH 虽然共享，要直接使用也是不行的。比如我在 WSL 装了 GCC，Win 的 IDE 在配置环境的时候就不能使用它，只能通过终端手动命令。</p>\n<h4>多分发版配置</h4>\n<p>你可能在应用商店装了多个 WSL，系统可以指派一个默认分发版</p>\n<ol>\n<li>\n<p>打开 CMD or PowerShell</p>\n</li>\n<li>\n<p>输入 <code>wslconfig</code> 回车即可调出并管理 Windows 上所有的 Linux 分发</p>\n<pre><code>Windows PowerShell\r\n版权所有 (C) Microsoft Corporation。保留所有权利。\r\n\r\nPS C:\\Windows\\system32> wslconfig\r\n对 Windows 上的 Linux 子系统进行操作管理\r\n\r\n用途：\r\n    /l, /list [/all]\r\n        列出已注册的分发版。\r\n        /all - 有选择地列出所有分发版，包括\r\n            当前正在安装或卸载的分发版。\r\n\r\n    /s, /setdefault &#x3C;DistributionName>\r\n        将该分发版设为默认。\r\n\r\n    /t, /terminate &#x3C;DistributionName>\r\n        终止分发。\r\n\r\n    /u, /unregister &#x3C;DistributionName>\r\n        取消分发版注册。\r\n\r\n    /upgrade &#x3C;DistributionName>\r\n        将分发版升级至 WslFs 文件系统格式。\r\nPS C:\\Windows\\system32>\n</code></pre>\n</li>\n</ol>\n<h4>VSCode 配置</h4>\n<p>VSCode 可以直接配置成 WSL 的终端</p>\n<p>在 setting.json 中修改条目（或者直接加入）</p>\n<pre><code class=\"language-json\">\"terminal.integrated.shell.windows\": \"C://Windows//System32//cmd.exe\",\r\n\"terminal.external.windowsExec\": \"C://Windows//System32//cmd.exe\",\r\n\r\n// 改为\r\n\r\n\"terminal.integrated.shell.windows\": \"C://Windows//System32//wsl.exe\",\r\n\"terminal.external.windowsExec\": \"C://Windows//System32//wsl.exe\",\n</code></pre>\n<p>对于使用 Code Runner 插件的需要加入条目</p>\n<pre><code class=\"language-json\">\"code-runner.terminalRoot\": \"/mnt/\",\n</code></pre>"}},"pageContext":{"id":"3b43e8ad-6c65-5374-85a4-31ca0c1e2657","parent__name":"wslenv","__params":{"parent__name":"wslenv"}}},"staticQueryHashes":[]}