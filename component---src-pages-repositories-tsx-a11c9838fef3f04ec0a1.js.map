{"version":3,"file":"component---src-pages-repositories-tsx-a11c9838fef3f04ec0a1.js","mappings":"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","sources":["webpack://redblue.fun/./src/pages/repositories.tsx"],"sourcesContent":["import { Timeline, TimelineItem } from \"@/components\"\nimport { SiteMetadata } from \"@/templates/main.layout\"\nimport type { Gist, Repository } from \"@/typings/github.schemas\"\nimport React from \"react\"\nimport { Container } from \"react-bootstrap\"\n\nfunction Repositories() {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  const [repositories, setRepositories] = React.useState<Repository[]>([])\n  const [gists, setGists] = React.useState<Gist[]>([])\n\n  React.useEffect(() => {\n    setMetadata(() => ({\n      author: null,\n      siteUrl: null,\n      date: null,\n      title: \"È°πÁõÆ\",\n      subTitle: \"Âêæ‰∏éÂæêÂ∑•Â≠∞Â®¥ÁºñÁ†Å‰πãÊäÄ\",\n      description: \"Talk is cheap. Show me the code.\",\n    }))\n  }, [])\n\n  React.useEffect(() => {\n    fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: `\n        {\n          viewer {\n            repositories(privacy: PUBLIC, isFork: false, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                name\n                createdAt\n                pushedAt\n                updatedAt\n                url\n                forkCount\n                licenseInfo {\n                  name\n                  id\n                }\n                primaryLanguage {\n                  name\n                  id\n                  color\n                }\n                homepageUrl\n                description\n                stargazerCount\n                commitComments(last: 1) {\n                  nodes {\n                    commit {\n                      author {\n                        name\n                      }\n                      message\n                    }\n                  }\n                }\n              }\n            }\n            gists(privacy: PUBLIC, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                description\n                updatedAt\n                url\n              }\n            }\n          }\n        }        \n    `,\n      }),\n      headers: {\n        Authorization: `bearer ${process.env.GATSBY_GITHUB_TOKEN}`,\n      },\n    })\n      .then(res => res.json())\n      .then(res => {\n        setRepositories(res?.data?.viewer?.repositories?.nodes ?? [])\n        setGists(res?.data?.viewer?.gists?.nodes ?? [])\n      })\n  }, [])\n\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      <h3>\n        <a\n          href=\"https://github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üíª Repositories\n        </a>\n      </h3>\n      <Timeline>\n        {repositories.length === 0 && (\n          <TimelineItem\n            header={\n              <h5>\n                <strong className=\"masked\">\n                  üèÉ‚Äç‚ôÇÔ∏è ‰ªé github.com/redblue9771 ÊãâÂèñ‰∏≠‚Ä¶\n                </strong>\n              </h5>\n            }\n            point={<i className=\"bi bi-cpu\" />}\n          />\n        )}\n        {repositories.map(\n          ({\n            id,\n            name,\n            description,\n            updatedAt,\n            forkCount,\n            stargazerCount: starCount,\n            commitComments,\n            licenseInfo,\n            primaryLanguage,\n          }) => (\n            <TimelineItem\n              key={id}\n              header={\n                <React.Fragment>\n                  <h5 className=\"d-inline-block\">{name}</h5>\n                  <div>\n                    <small>\n                      <span>\n                        <i className=\"bi bi-code-slash\" />\n                        {primaryLanguage ? primaryLanguage.name : \"\"}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      <span>\n                        <i className=\"bi bi-star\" />\n                        {starCount}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      <span>\n                        <i className=\"bi bi-bezier2\" />\n                        {forkCount}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      {licenseInfo && (\n                        <span>\n                          <i className=\"bi bi-book-half\" />\n                          {licenseInfo.name}\n                        </span>\n                      )}\n                    </small>\n                  </div>\n                </React.Fragment>\n              }\n              body={\n                <React.Fragment>\n                  <p>{description}</p>\n                  {commitComments?.nodes?.[0] && (\n                    <small className=\"d-block\">\n                      ÊúÄÊñ∞ÁöÑÊèê‰∫§Ôºö\n                      {commitComments?.nodes?.[0]?.commit?.message} by{\" \"}\n                      {commitComments?.nodes?.[0]?.commit?.author?.name}\n                    </small>\n                  )}\n                </React.Fragment>\n              }\n              footer={\n                <p>\n                  <small>\n                    ÊúÄËøë‰∏ÄÊ¨°Êõ¥Êñ∞Ôºö\n                    {new Date(updatedAt).toLocaleDateString()}\n                  </small>\n                </p>\n              }\n              point={<i className=\"bi bi-cpu\" />}\n            />\n          )\n        )}\n      </Timeline>\n\n      <h3>\n        <a\n          href=\"https://gist.github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üè∑Ô∏è Gist\n        </a>\n      </h3>\n\n      <ul>\n        {gists.map(({ id, description, updatedAt, url }) => (\n          <li key={id}>\n            <a\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={description ?? \"\"}\n            >\n              {new Date(updatedAt).toLocaleDateString()} - {description}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  )\n}\n\nexport default Repositories\n"],"names":["setMetadata","React","SiteMetadata","repositories","setRepositories","gists","setGists","author","siteUrl","date","title","subTitle","description","fetch","method","body","JSON","stringify","query","headers","Authorization","process","GATSBY_GITHUB_TOKEN","then","res","json","data","_res$data","viewer","_res$data$viewer","_res$data$viewer$repo2","nodes","_res$data2","_res$data2$viewer","_res$data2$viewer$gis","_jsxs","Container","fluid","className","_jsx","href","target","rel","Timeline","length","TimelineItem","header","point","map","id","name","updatedAt","forkCount","starCount","stargazerCount","commitComments","licenseInfo","primaryLanguage","_commitComments$nodes2","_commitComments$nodes3","commit","_commitComments$nodes4","message","_commitComments$nodes5","_commitComments$nodes6","_commitComments$nodes7","_commitComments$nodes8","footer","Date","toLocaleDateString","url"],"sourceRoot":""}