{"version":3,"file":"component---src-pages-repositories-tsx-df1dab7c397f0914a0e8.js","mappings":"2KAgNA,UA1MA,WACE,MAAM,YAAEA,GAAgBC,EAAAA,WAAiBC,EAAAA,eAElCC,EAAcC,GAAmBH,EAAAA,SAA6B,KAC9DI,EAAOC,GAAYL,EAAAA,SAAuB,IA4EjD,OA1EAA,EAAAA,WAAgB,KACdD,GAAY,KAAM,CAChBO,OAAQ,KACRC,QAAS,KACTC,KAAM,KACNC,MAAO,KACPC,SAAU,aACVC,YAAa,sCACZ,GACF,IAEHX,EAAAA,WAAgB,KACdY,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,yuCAgDTC,QAAS,CACPC,cAAe,UAAUC,CAAAA,EAAYC,uBAGtCC,MAAKC,GAAOA,EAAIC,SAChBF,MAAKC,IAAO,IAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACX7B,EAAsD,QAAvCsB,EAACF,SAAS,QAANG,EAAHH,EAAKU,YAAI,IAAAP,GAAQ,QAARC,EAATD,EAAWQ,cAAM,IAAAP,GAAc,QAAdC,EAAjBD,EAAmBzB,oBAAY,IAAA0B,OAA5B,EAAHA,EAAiCO,aAAK,IAAAV,EAAAA,EAAI,IAC1DpB,EAAwC,QAAhCwB,EAACN,SAAS,QAANO,EAAHP,EAAKU,YAAI,IAAAH,GAAQ,QAARC,EAATD,EAAWI,cAAM,IAAAH,GAAO,QAAPC,EAAjBD,EAAmB3B,aAAK,IAAA4B,OAArB,EAAHA,EAA0BG,aAAK,IAAAN,EAAAA,EAAI,GAAG,GAC/C,GACH,KAGDO,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAM,KAAKC,UAAU,UAASC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KACEC,KAAK,iCACLC,OAAO,SACPC,IAAI,sBAAqBJ,SAC1B,uBAIHJ,EAAAA,EAAAA,MAACS,EAAAA,GAAQ,CAAAL,SAAA,CACkB,IAAxBtC,EAAa4C,SACZL,EAAAA,EAAAA,KAACM,EAAAA,GAAY,CACXC,QACEP,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,SAAQC,SAAC,0CAK/BS,OAAOR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAGvBrC,EAAagD,KACZC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,GACCC,EAAE,KACFC,EAAI,YACJlD,EAAW,UACXmD,EAAS,UACTC,EACAC,eAAgBC,EAAS,eACzBC,EAAc,YACdC,EAAW,gBACXC,GACDjB,EAAA,OACCV,EAAAA,EAAAA,KAACM,EAAAA,GAAY,CAEXC,QACEZ,EAAAA,EAAAA,MAACpC,EAAAA,SAAc,CAAAwC,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iBAAgBC,SAAEqB,KAChCpB,EAAAA,EAAAA,KAAA,OAAAD,UACEJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,EACEJ,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBACZ6B,EAAkBA,EAAgBP,KAAO,MACrC,OAEPzB,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eACZ0B,KACI,OAEP7B,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kBACZwB,KACI,MAENI,IACC/B,EAAAA,EAAAA,MAAA,QAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oBACZ4B,EAAYN,gBAOzB/C,MACEsB,EAAAA,EAAAA,MAACpC,EAAAA,SAAc,CAAAwC,SAAA,EACbC,EAAAA,EAAAA,KAAA,KAAAD,SAAI7B,KACHuD,SAAqB,QAAPd,EAAdc,EAAgB/B,aAAK,IAAAiB,OAAP,EAAdA,EAAwB,MACvBhB,EAAAA,EAAAA,MAAA,SAAOG,UAAU,UAASC,SAAA,CAAC,SAExB0B,SAAqB,QAAPb,EAAda,EAAgB/B,aAAK,IAAAkB,GAAK,QAALC,EAArBD,EAAwB,UAAE,IAAAC,GAAQ,QAARC,EAA1BD,EAA4Be,cAAM,IAAAd,OAApB,EAAdA,EAAoCe,QAAQ,MAAI,IAChDJ,SAAqB,QAAPV,EAAdU,EAAgB/B,aAAK,IAAAqB,GAAK,QAALC,EAArBD,EAAwB,UAAE,IAAAC,GAAQ,QAARC,EAA1BD,EAA4BY,cAAM,IAAAX,GAAQ,QAARC,EAAlCD,EAAoCpD,cAAM,IAAAqD,OAA5B,EAAdA,EAA4CE,WAKrDU,QACE9B,EAAAA,EAAAA,KAAA,KAAAD,UACEJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,CAAO,UAEJ,IAAIgC,KAAKV,GAAWW,0BAI3BxB,OAAOR,EAAAA,EAAAA,KAAA,KAAGF,UAAU,eAnDfqB,EAoDL,QAKRnB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KACEC,KAAK,sCACLC,OAAO,SACPC,IAAI,sBAAqBJ,SAC1B,gBAKHC,EAAAA,EAAAA,KAAA,MAAAD,SACGpC,EAAM8C,KAAIwB,IAAA,IAAC,GAAEd,EAAE,YAAEjD,EAAW,UAAEmD,EAAS,IAAEa,GAAKD,EAAA,OAC7CjC,EAAAA,EAAAA,KAAA,MAAAD,UACEJ,EAAAA,EAAAA,MAAA,KACEM,KAAMiC,EACNhC,OAAO,SACPC,IAAI,sBACJnC,MAAOE,QAAAA,EAAe,GAAG6B,SAAA,CAExB,IAAIgC,KAAKV,GAAWW,qBAAqB,MAAI9D,MAPzCiD,EASJ,QAKf,C","sources":["webpack://redblue.fun/./src/pages/repositories.tsx"],"sourcesContent":["import { Timeline, TimelineItem } from \"@/components\"\nimport { SiteMetadata } from \"@/templates/main.layout\"\nimport type { Gist, Repository } from \"@/typings/github.schemas\"\nimport React from \"react\"\nimport { Container } from \"react-bootstrap\"\n\nfunction Repositories() {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  const [repositories, setRepositories] = React.useState<Repository[]>([])\n  const [gists, setGists] = React.useState<Gist[]>([])\n\n  React.useEffect(() => {\n    setMetadata(() => ({\n      author: null,\n      siteUrl: null,\n      date: null,\n      title: \"È°πÁõÆ\",\n      subTitle: \"Âêæ‰∏éÂæêÂ∑•Â≠∞Â®¥ÁºñÁ†Å‰πãÊäÄ\",\n      description: \"Talk is cheap. Show me the code.\",\n    }))\n  }, [])\n\n  React.useEffect(() => {\n    fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: `\n        {\n          viewer {\n            repositories(privacy: PUBLIC, isFork: false, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                name\n                createdAt\n                pushedAt\n                updatedAt\n                url\n                forkCount\n                licenseInfo {\n                  name\n                  id\n                }\n                primaryLanguage {\n                  name\n                  id\n                  color\n                }\n                homepageUrl\n                description\n                stargazerCount\n                commitComments(last: 1) {\n                  nodes {\n                    commit {\n                      author {\n                        name\n                      }\n                      message\n                    }\n                  }\n                }\n              }\n            }\n            gists(privacy: PUBLIC, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                description\n                updatedAt\n                url\n              }\n            }\n          }\n        }        \n    `,\n      }),\n      headers: {\n        Authorization: `bearer ${process.env.GATSBY_GITHUB_TOKEN}`,\n      },\n    })\n      .then(res => res.json())\n      .then(res => {\n        setRepositories(res?.data?.viewer?.repositories?.nodes ?? [])\n        setGists(res?.data?.viewer?.gists?.nodes ?? [])\n      })\n  }, [])\n\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      <h3>\n        <a\n          href=\"https://github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üíª Repositories\n        </a>\n      </h3>\n      <Timeline>\n        {repositories.length === 0 && (\n          <TimelineItem\n            header={\n              <h5>\n                <strong className=\"masked\">\n                  üèÉ‚Äç‚ôÇÔ∏è ‰ªé github.com/redblue9771 ÊãâÂèñ‰∏≠‚Ä¶\n                </strong>\n              </h5>\n            }\n            point={<i className=\"bi bi-cpu\" />}\n          />\n        )}\n        {repositories.map(\n          ({\n            id,\n            name,\n            description,\n            updatedAt,\n            forkCount,\n            stargazerCount: starCount,\n            commitComments,\n            licenseInfo,\n            primaryLanguage,\n          }) => (\n            <TimelineItem\n              key={id}\n              header={\n                <React.Fragment>\n                  <h5 className=\"d-inline-block\">{name}</h5>\n                  <div>\n                    <small>\n                      <span>\n                        <i className=\"bi bi-code-slash\" />\n                        {primaryLanguage ? primaryLanguage.name : \"\"}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      <span>\n                        <i className=\"bi bi-star\" />\n                        {starCount}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      <span>\n                        <i className=\"bi bi-bezier2\" />\n                        {forkCount}\n                      </span>\n                      &nbsp;&nbsp;&nbsp;\n                      {licenseInfo && (\n                        <span>\n                          <i className=\"bi bi-book-half\" />\n                          {licenseInfo.name}\n                        </span>\n                      )}\n                    </small>\n                  </div>\n                </React.Fragment>\n              }\n              body={\n                <React.Fragment>\n                  <p>{description}</p>\n                  {commitComments?.nodes?.[0] && (\n                    <small className=\"d-block\">\n                      ÊúÄÊñ∞ÁöÑÊèê‰∫§Ôºö\n                      {commitComments?.nodes?.[0]?.commit?.message} by{\" \"}\n                      {commitComments?.nodes?.[0]?.commit?.author?.name}\n                    </small>\n                  )}\n                </React.Fragment>\n              }\n              footer={\n                <p>\n                  <small>\n                    ÊúÄËøë‰∏ÄÊ¨°Êõ¥Êñ∞Ôºö\n                    {new Date(updatedAt).toLocaleDateString()}\n                  </small>\n                </p>\n              }\n              point={<i className=\"bi bi-cpu\" />}\n            />\n          )\n        )}\n      </Timeline>\n\n      <h3>\n        <a\n          href=\"https://gist.github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üè∑Ô∏è Gist\n        </a>\n      </h3>\n\n      <ul>\n        {gists.map(({ id, description, updatedAt, url }) => (\n          <li key={id}>\n            <a\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={description ?? \"\"}\n            >\n              {new Date(updatedAt).toLocaleDateString()} - {description}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  )\n}\n\nexport default Repositories\n"],"names":["setMetadata","React","SiteMetadata","repositories","setRepositories","gists","setGists","author","siteUrl","date","title","subTitle","description","fetch","method","body","JSON","stringify","query","headers","Authorization","process","GATSBY_GITHUB_TOKEN","then","res","json","_res$data$viewer$repo","_res$data","_res$data$viewer","_res$data$viewer$repo2","_res$data$viewer$gist","_res$data2","_res$data2$viewer","_res$data2$viewer$gis","data","viewer","nodes","_jsxs","Container","fluid","className","children","_jsx","href","target","rel","Timeline","length","TimelineItem","header","point","map","_ref","_commitComments$nodes","_commitComments$nodes2","_commitComments$nodes3","_commitComments$nodes4","_commitComments$nodes5","_commitComments$nodes6","_commitComments$nodes7","_commitComments$nodes8","id","name","updatedAt","forkCount","stargazerCount","starCount","commitComments","licenseInfo","primaryLanguage","commit","message","footer","Date","toLocaleDateString","_ref2","url"],"sourceRoot":""}