{"version":3,"file":"component---src-pages-library-tsx-d8a8f8ddc387ea446fb1.js","mappings":"oOAIA,MAAMA,EAA2B,cAAiB,EAChDC,WACAC,OACAC,YAAW,EACXC,YACAC,OAAO,QAEPC,GAAIC,EAAY,SACbC,GACFC,KACD,MAAMC,GAAS,QAAmBT,EAAU,aAC5C,IAAIU,EAAYD,EAEhB,OADIP,IAAUQ,EAAY,GAAGD,eACT,SAAKH,EAAW,IAC/BC,EACHC,IAAKA,EACLJ,KAAMA,EACND,UAAW,IAAWA,EAAWO,EAAWT,GAAQ,GAAGQ,KAAUR,MACjE,IAEJF,EAAYY,YAAc,cAC1B,Q,SCpBA,MAAM,EAAsB,cAAiB,EAC3CN,KACAL,WACAY,UAAU,UACVX,OACAY,UAAS,EACTC,YAAW,EACXX,eACGY,GACFP,KACD,MAAMC,GAAS,QAAmBT,EAAU,QACrCgB,GAAa,QAClBC,KACG,QAAe,CAClBA,QAASZ,EACTS,cACGC,IAECT,EAAYW,EAClB,OAAoB,SAAKX,EAAW,IAC/BU,KACAD,EACHP,IAAKA,EACLM,SAAUA,EACVX,UAAW,IAAWA,EAAWM,EAAQI,GAAU,SAAUD,GAAW,GAAGH,KAAUG,IAAWX,GAAQ,GAAGQ,KAAUR,IAAQc,EAAMG,MAAQJ,GAAY,aACvJ,IAEJ,EAAOH,YAAc,SACrB,QCkEA,MAvEA,SAAgBQ,GAAyD,IAAxD,KAAEC,GAAoDD,EACrE,MAAM,YAAEE,GAAgBC,EAAAA,WAAiBC,EAAAA,cAYzC,OAVAD,EAAAA,WAAgB,KACdD,GAAY,KAAM,CAChBG,OAAQ,KACRC,QAAS,KACTC,KAAM,KACNC,MAAO,KACPC,SAAU,OACVC,YAAa,kBACZ,GACF,KAEDC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,MAAM,KAAK7B,UAAU,UAAS8B,SACtCb,EAAKc,QAAQC,MAAMC,KAAIC,IAAA,IAAGC,WAAYC,EAAM,MAAEC,GAAOH,EAAA,OACpDI,EAAAA,EAAAA,MAACnB,EAAAA,SAAc,CAAAW,SAAA,EACbH,EAAAA,EAAAA,KAAA,MAAI3B,UAAU,WAAU8B,SAAEM,KAC1BT,EAAAA,EAAAA,KAAA,MAAAG,SACGO,EAAMJ,KAAIM,IAAc,IAAAC,EAAA,IAAb,KAAEC,GAAMF,EAClB,MAAM,GACJG,EAAE,KACFC,EAAI,OACJtB,EAAM,KACNuB,EAAI,YACJlB,EAAW,SACXmB,EAAQ,SACRC,GACEL,EACJ,OACEH,EAAAA,EAAAA,MAAA,MAAII,GAAIA,EAAI1C,UAAU,QAAO8B,SAAA,EAC3BQ,EAAAA,EAAAA,MAAA,OAAAR,SAAA,CACGa,EAAK,MAAItB,KAEXK,IACCY,EAAAA,EAAAA,MAAA,OAAKtC,UAAU,aAAY8B,SAAA,CAAC,MAAIJ,MAGlCY,EAAAA,EAAAA,MAAA,OAAKtC,UAAU,uBAAsB8B,SAAA,CAAC,OAC/Be,aAAQ,EAARA,EAAUE,KAAK,SAEtBT,EAAAA,EAAAA,MAAC1C,EAAW,CAAAkC,SAAA,EACVH,EAAAA,EAAAA,KAACqB,EAAM,CACL9C,GAAG,IACHa,KAAuB,QAAnByB,EAAGM,GAAYF,SAAI,IAAAJ,EAAAA,EAAK,IAC5BS,OAAO,SACPC,IAAI,+BACJzC,QAAQ,kBACRqC,UAAQ,EAAAhB,SACT,sBAGDH,EAAAA,EAAAA,KAACqB,EAAM,CACLjC,KAAI,GAAK6B,EACTK,OAAO,SACPC,IAAI,+BACJzC,QAAQ,kBAAiBqB,SAC1B,sBA3B8Ba,EA+B9B,QA7CQP,EAiDJ,KAIzB,C","sources":["webpack://redblue.fun/./node_modules/react-bootstrap/esm/ButtonGroup.js","webpack://redblue.fun/./node_modules/react-bootstrap/esm/Button.js","webpack://redblue.fun/./src/pages/library.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import { SiteMetadata } from \"@/templates/main.layout\"\nimport { graphql, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { Container, Button, ButtonGroup } from \"react-bootstrap\"\n\nexport const query = graphql`\n  query queryBooksForLibrary {\n    allBook {\n      group(field: { series: SELECT }) {\n        fieldValue\n        edges {\n          node {\n            id\n            name\n            series\n            slug\n            keywords\n            author\n            categories\n            description\n            download\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction Library({ data }: PageProps<Queries.queryBooksForLibraryQuery>) {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  React.useEffect(() => {\n    setMetadata(() => ({\n      author: null,\n      siteUrl: null,\n      date: null,\n      title: \"藏经\",\n      subTitle: \"博采众长\",\n      description: \"君知其难，则自能旁搜博采\",\n    }))\n  }, [])\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      {data.allBook.group.map(({ fieldValue: series, edges }) => (\n        <React.Fragment key={series}>\n          <h3 className=\"text-new\">{series}</h3>\n          <ul>\n            {edges.map(({ node }) => {\n              const {\n                id,\n                name,\n                author,\n                slug,\n                description,\n                keywords,\n                download,\n              } = node\n              return (\n                <li id={id} className=\"mb-3 \" key={name}>\n                  <div>\n                    {name} - {author}\n                  </div>\n                  {description && (\n                    <div className=\"text-muted\">简述：{description}</div>\n                  )}\n\n                  <div className=\"text-muted tags mb-3\">\n                    关键词：{keywords?.join(\"、\")}\n                  </div>\n                  <ButtonGroup>\n                    <Button\n                      as=\"a\"\n                      href={(download || slug) ?? \"/\"}\n                      target=\"_blank\"\n                      rel=\"contents noopener noreferrer\"\n                      variant=\"outline-primary\"\n                      download\n                    >\n                      📥 下载 / Download\n                    </Button>\n                    <Button\n                      href={`${slug}`}\n                      target=\"_blank\"\n                      rel=\"contents noopener noreferrer\"\n                      variant=\"outline-primary\"\n                    >\n                      📖 阅读 / Read\n                    </Button>\n                  </ButtonGroup>\n                </li>\n              )\n            })}\n          </ul>\n        </React.Fragment>\n      ))}\n    </Container>\n  )\n}\n\nexport default Library\n"],"names":["ButtonGroup","bsPrefix","size","vertical","className","role","as","Component","rest","ref","prefix","baseClass","displayName","variant","active","disabled","props","buttonProps","tagName","href","_ref","data","setMetadata","React","SiteMetadata","author","siteUrl","date","title","subTitle","description","_jsx","Container","fluid","children","allBook","group","map","_ref2","fieldValue","series","edges","_jsxs","_ref3","_ref4","node","id","name","slug","keywords","download","join","Button","target","rel"],"sourceRoot":""}