{"version":3,"file":"component---src-pages-404-tsx-2b73f3781d8a76515f7a.js","mappings":"sLAuEA,UApDqB,SAAH,GAAuD,IAAjDA,EAAI,EAAJA,KACdC,EAAgBC,EAAAA,WAAiBC,EAAAA,cAAjCF,YAaR,OAXAC,EAAAA,WAAgB,WACdD,GAAY,iBAAO,CACjBG,OAAQ,KACRC,QAAS,KACTC,MAAO,KACPC,KAAM,KACNC,SAAU,uBACVC,YAAa,kBACd,GACH,GAAG,KAGDC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAM,KAAKC,UAAU,UAASC,SAAAA,EACvCC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,IAAI,MAAMC,IAAI,kBACnBF,EAAAA,EAAAA,KAAAA,MAAAA,CAAKF,UAAU,sBAAsBK,KAAK,QAAOJ,UAC/CJ,EAAAA,EAAAA,MAAAA,KAAAA,CAAAI,SAAAA,CAAAA,wBAEEC,EAAAA,EAAAA,KAACI,EAAAA,KAAI,CAACC,GAAG,IAAGN,SAAAA,OAAU,YAI1BC,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAACC,QAAQ,OAAMR,SACrBd,EAAKuB,YAAYC,MAAMC,KACtB,gBAAGC,EAAE,EAAFA,GAAIpB,EAAK,EAALA,MAAOqB,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOnB,EAAW,EAAXA,YAAW,OACpCC,EAAAA,EAAAA,MAACW,EAAAA,EAAAA,KAAa,CAEZQ,GAAG,IACHC,KAAMH,QAAAA,EAAQ,GACdI,OAAO,SACPC,IAAI,UAASlB,SAAAA,EAEbC,EAAAA,EAAAA,KAAAA,MAAAA,CACEF,UAAU,8BACVG,IAAKV,QAAAA,EAAS,GACdA,MAAOA,QAAAA,EAAS,GAChBW,IAAKW,QAAAA,EAAS,MAEhBlB,EAAAA,EAAAA,MAACW,EAAAA,EAAAA,QAAgB,CAACR,UAAU,qBAAoBC,SAAAA,EAC9CC,EAAAA,EAAAA,KAAAA,KAAAA,CAAAD,SAAKR,KACLS,EAAAA,EAAAA,KAAAA,IAAAA,CAAAD,SAAIL,SAdDiB,EAgBS,QAM5B,C","sources":["webpack://redblue.fun/./src/pages/404.tsx"],"sourcesContent":["import { SiteMetadata } from \"@/templates/main.layout\"\nimport { graphql, Link, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { Carousel, Container } from \"react-bootstrap\"\n\nexport const query = graphql`\n  query notFoundPage {\n    allCarousel(filter: { for: { eq: \"homePage\" } }) {\n      nodes {\n        id\n        description\n        cover\n        link\n        title\n      }\n    }\n  }\n`\n\nconst NotFoundPage = ({ data }: PageProps<Queries.notFoundPageQuery>) => {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  React.useEffect(() => {\n    setMetadata(() => ({\n      author: null,\n      siteUrl: null,\n      title: null,\n      date: null,\n      subTitle: \"404: Page Not Found!\",\n      description: \"天涯何处无芳草，何必单恋这一页\",\n    }))\n  }, [])\n\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      <img alt=\"404\" src=\"/img/404.svg\" />\n      <div className=\"alert alert-primary\" role=\"alert\">\n        <h4>\n          页面不存在，旧站的页面链接已经改变，请到\n          <Link to=\"/\">主页</Link>\n          中寻找\n        </h4>\n      </div>\n      <Carousel variant=\"dark\">\n        {data.allCarousel.nodes.map(\n          ({ id, title, link, cover, description }) => (\n            <Carousel.Item\n              key={id}\n              as=\"a\"\n              href={link ?? \"\"}\n              target=\"_blank\"\n              rel=\"noolopp\"\n            >\n              <img\n                className=\"d-block w-100 showcase-item\"\n                alt={title ?? \"\"}\n                title={title ?? \"\"}\n                src={cover ?? \"\"}\n              />\n              <Carousel.Caption className=\"showcase-item-text\">\n                <h4>{title}</h4>\n                <p>{description}</p>\n              </Carousel.Caption>\n            </Carousel.Item>\n          )\n        )}\n      </Carousel>\n    </Container>\n  )\n}\n\nexport default NotFoundPage\n"],"names":["data","setMetadata","React","SiteMetadata","author","siteUrl","title","date","subTitle","description","_jsxs","Container","fluid","className","children","_jsx","alt","src","role","Link","to","Carousel","variant","allCarousel","nodes","map","id","link","cover","as","href","target","rel"],"sourceRoot":""}