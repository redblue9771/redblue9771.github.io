{"version":3,"sources":["webpack://@r-ichard/gatsby-starter-bootstrap-5/./src/pages/repositories.tsx"],"names":["setMetadata","React","SiteMetadata","repo","setRepo","gist","setGist","prev","title","subTitle","description","fetch","method","body","JSON","stringify","query","headers","Authorization","process","GATSBY_GITHUB_TOKEN","then","res","json","data","viewer","repositories","nodes","gists","fluid","className","href","target","rel","length","header","point","map","id","name","updatedAt","createdAt","pushedAt","forkCount","url","starCount","stargazerCount","commitComments","licenseInfo","primaryLanguage","homepageUrl","key","commit","message","author","footer","Date","toLocaleDateString"],"mappings":"mNAmNA,UA7MA,WACE,IAAQA,EAAgBC,aAAiBC,gBAAjCF,YAER,EAAwBC,WAEtB,IAFKE,EAAP,KAAaC,EAAb,KAGA,EAAwBH,WACtB,IADKI,EAAP,KAAaC,EAAb,KA2EA,OAvEAL,aAAgB,WACdD,GAAY,SAAAO,GAAI,MAAK,CACnBC,MAAO,KACPC,SAAU,aACVC,YAAa,+CAEd,IAEHT,aAAgB,WACdU,MAAM,iCAAkC,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAM,yuCAgDRC,QAAS,CACPC,cAAc,UAAWC,GAAYC,uBAGtCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,IAAD,gBACXlB,EAAO,UAACkB,SAAD,UAACA,EAAKE,YAAN,iBAAC,EAAWC,cAAZ,iBAAC,EAAmBC,oBAApB,aAAC,EAAiCC,aAAlC,QAA2C,IAClDrB,EAAO,UAACgB,SAAD,UAACA,EAAKE,YAAN,iBAAC,EAAWC,cAAZ,iBAAC,EAAmBG,aAApB,aAAC,EAA0BD,aAA3B,QAAoC,SAE9C,IAGD,gBAAC,IAAD,CAAWE,MAAM,KAAKC,UAAU,WAC9B,0BACE,qBACEC,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAHN,oBAQF,gBAAC,KAAD,KACmB,IAAhB9B,EAAK+B,QACJ,gBAAC,KAAD,CACEC,OACE,0BACE,0BAAQL,UAAU,UAAlB,wCAKJM,MAAO,qBAAGN,UAAU,gBAGvB3B,EAAKkC,KACJ,gCACEC,EADF,EACEA,GACAC,EAFF,EAEEA,KACA7B,EAHF,EAGEA,YAGA8B,GANF,EAIEC,UAJF,EAKEC,SALF,EAMEF,WAEAG,GARF,EAOEC,IAPF,EAQED,WACgBE,EATlB,EASEC,eACAC,EAVF,EAUEA,eACAC,EAXF,EAWEA,YACAC,EAZF,EAYEA,gBAZF,EAaEC,YAbF,OAeE,gBAAC,KAAD,CACEC,IAAKb,EACLH,OACE,gBAAC,WAAD,KACE,sBAAIL,UAAU,kBAAkBS,GAChC,6BACE,4BACE,qBAAGT,UAAU,qBACZmB,EAAkBA,EAAgBV,KAAO,IAH9C,MAME,4BACE,qBAAGT,UAAU,eACZe,GARL,MAWE,4BACE,qBAAGf,UAAU,kBACZa,GAbL,MAgBGK,GACC,4BACE,qBAAGlB,UAAU,oBACZkB,EAAYT,QAMvB1B,KACE,gBAAC,WAAD,KACE,yBAAIH,IACHqC,SAAA,UAAAA,EAAgBpB,aAAhB,eAAwB,KACvB,yBAAOG,UAAU,WAAjB,SAEGiB,SAFH,UAEGA,EAAgBpB,aAFnB,iBAEG,EAAwB,UAF3B,iBAEG,EAA4ByB,cAF/B,aAEG,EAAoCC,QAFvC,MAEmD,IAChDN,SAHH,UAGGA,EAAgBpB,aAHnB,iBAGG,EAAwB,UAH3B,iBAGG,EAA4ByB,cAH/B,iBAGG,EAAoCE,cAHvC,aAGG,EAA4Cf,OAKrDgB,OACE,yBACE,uCAEG,IAAIC,KAAKhB,GAAWiB,uBAI3BrB,MAAO,qBAAGN,UAAU,oBAM5B,0BACE,qBACEC,KAAK,sCACLC,OAAO,SACPC,IAAI,uBAHN,aASF,0BACG5B,EAAKgC,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,YAAa8B,EAApB,EAAoBA,UAAWI,EAA/B,EAA+BA,IAA/B,OACR,sBAAIO,IAAKb,GACP,qBACEP,KAAMa,EACNZ,OAAO,SACPC,IAAI,sBACJzB,MAAOE,GAEN,IAAI8C,KAAKhB,GAAWiB,qBANvB,MAMgD/C","file":"component---src-pages-repositories-tsx-614dfd0f3773221f9816.js","sourcesContent":["import { Timeline, TimelineItem } from \"@/components\"\nimport { SiteMetadata } from \"@/templates/main.layout\"\nimport React from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport { GistConnection, ViewerHovercardContext } from \"typings/schemas\"\n\nfunction Repositories() {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  const [repo, setRepo] = React.useState<\n    NonNullable<ViewerHovercardContext[\"viewer\"][\"repositories\"][\"nodes\"]>\n  >([])\n  const [gist, setGist] = React.useState<NonNullable<GistConnection[\"nodes\"]>>(\n    []\n  )\n\n  React.useEffect(() => {\n    setMetadata(prev => ({\n      title: \"È°πÁõÆ\",\n      subTitle: \"Âêæ‰∏éÂæêÂ∑•Â≠∞Â®¥ÁºñÁ†Å‰πãÊäÄ\",\n      description: \"One great project can change the world\",\n    }))\n  }, [])\n\n  React.useEffect(() => {\n    fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: `\n        {\n          viewer {\n            repositories(privacy: PUBLIC, isFork: false, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                name\n                createdAt\n                pushedAt\n                updatedAt\n                url\n                forkCount\n                licenseInfo {\n                  name\n                  id\n                }\n                primaryLanguage {\n                  name\n                  id\n                  color\n                }\n                homepageUrl\n                description\n                stargazerCount\n                commitComments(last: 1) {\n                  nodes {\n                    commit {\n                      author {\n                        name\n                      }\n                      message\n                    }\n                  }\n                }\n              }\n            }\n            gists(privacy: PUBLIC, first: 99, orderBy: {field: UPDATED_AT, direction: DESC}) {\n              nodes {\n                id\n                description\n                updatedAt\n                url\n              }\n            }\n          }\n        }        \n    `,\n      }),\n      headers: {\n        Authorization: `bearer ${process.env.GATSBY_GITHUB_TOKEN}`,\n      },\n    })\n      .then(res => res.json())\n      .then(res => {\n        setRepo(res?.data?.viewer?.repositories?.nodes ?? [])\n        setGist(res?.data?.viewer?.gists?.nodes ?? [])\n      })\n  }, [])\n\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      <h3>\n        <a\n          href=\"https://github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üíª Repositories\n        </a>\n      </h3>\n      <Timeline>\n        {repo.length === 0 && (\n          <TimelineItem\n            header={\n              <h5>\n                <strong className=\"masked\">\n                  üèÉ‚Äç‚ôÇÔ∏è ‰ªé github.com/redblue9771 ÊãâÂèñ‰∏≠‚Ä¶\n                </strong>\n              </h5>\n            }\n            point={<i className=\"bi bi-cpu\" />}\n          />\n        )}\n        {repo.map(\n          ({\n            id,\n            name,\n            description,\n            createdAt,\n            pushedAt,\n            updatedAt,\n            url,\n            forkCount,\n            stargazerCount: starCount,\n            commitComments,\n            licenseInfo,\n            primaryLanguage,\n            homepageUrl,\n          }) => (\n            <TimelineItem\n              key={id}\n              header={\n                <React.Fragment>\n                  <h5 className=\"d-inline-block\">{name}</h5>\n                  <small>\n                    <span>\n                      <i className=\"bi bi-code-slash\" />\n                      {primaryLanguage ? primaryLanguage.name : \"\"}\n                    </span>\n                    &nbsp;&nbsp;&nbsp;\n                    <span>\n                      <i className=\"bi bi-star\" />\n                      {starCount}\n                    </span>\n                    &nbsp;&nbsp;&nbsp;\n                    <span>\n                      <i className=\"bi bi-bezier2\" />\n                      {forkCount}\n                    </span>\n                    &nbsp;&nbsp;&nbsp;\n                    {licenseInfo && (\n                      <span>\n                        <i className=\"bi bi-book-half\" />\n                        {licenseInfo.name}\n                      </span>\n                    )}\n                  </small>\n                </React.Fragment>\n              }\n              body={\n                <React.Fragment>\n                  <p>{description}</p>\n                  {commitComments?.nodes?.[0] && (\n                    <small className=\"d-block\">\n                      ÊúÄÊñ∞ÁöÑÊèê‰∫§Ôºö\n                      {commitComments?.nodes?.[0]?.commit?.message} by{\" \"}\n                      {commitComments?.nodes?.[0]?.commit?.author?.name}\n                    </small>\n                  )}\n                </React.Fragment>\n              }\n              footer={\n                <p>\n                  <small>\n                    ÊúÄËøë‰∏ÄÊ¨°Êõ¥Êñ∞Ôºö\n                    {new Date(updatedAt).toLocaleDateString()}\n                  </small>\n                </p>\n              }\n              point={<i className=\"bi bi-cpu\" />}\n            />\n          )\n        )}\n      </Timeline>\n\n      <h3>\n        <a\n          href=\"https://gist.github.com/redblue9771\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          üè∑Ô∏è Gist\n        </a>\n      </h3>\n\n      <ul>\n        {gist.map(({ id, description, updatedAt, url }) => (\n          <li key={id}>\n            <a\n              href={url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={description}\n            >\n              {new Date(updatedAt).toLocaleDateString()} - {description}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  )\n}\n\nexport default Repositories\n"],"sourceRoot":""}