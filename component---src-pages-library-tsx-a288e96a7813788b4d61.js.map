{"version":3,"sources":["webpack://@r-ichard/gatsby-starter-bootstrap-5/./src/pages/library.tsx"],"names":["data","setMetadata","location","React","SiteMetadata","prev","title","subTitle","description","fluid","className","allBook","group","map","series","fieldValue","edges","key","node","name","author","slug","keywords","id","join","href","target","rel","download"],"mappings":"0MA8EA,UAlDA,YAA+D,IAA5CA,EAA2C,EAA3CA,KACTC,GADoD,EAArCC,SACCC,aAAiBC,gBAAjCH,aASR,OAPAE,aAAgB,WACdF,GAAY,SAAAI,GAAI,MAAK,CACnBC,MAAO,KACPC,SAAU,OACVC,YAAa,qBAEd,IAED,gBAAC,IAAD,CAAWC,MAAM,KAAKC,UAAU,WAC7BV,EAAKW,QAAQC,MAAMC,KAAI,gBAAeC,EAAf,EAAGC,WAAoBC,EAAvB,EAAuBA,MAAvB,OACtB,gBAAC,WAAD,CAAgBC,IAAKH,GACnB,sBAAIJ,UAAU,iBAAiBI,GAC/B,0BACGE,EAAMH,KAAI,YAAe,IAAZK,EAAW,EAAXA,KACJC,EAA8CD,EAA9CC,KAAMC,EAAwCF,EAAxCE,OAAQC,EAAgCH,EAAhCG,KAAMb,EAA0BU,EAA1BV,YAAac,EAAaJ,EAAbI,SACzC,OACE,sBAAIC,GAAIJ,EAAMT,UAAU,QAAQO,IAAKE,GACnC,2BACGA,EADH,MACYC,GAEXZ,GACC,uBAAKE,UAAU,cAAf,MAAgCF,GAGlC,uBAAKE,UAAU,wBAAf,OACOY,EAASE,KAAK,MAGrB,qBACEd,UAAU,qDACVe,KAAI,GAAKJ,EACTK,OAAO,SACPC,IAAI,+BACJC,UAAQ,GALV","file":"component---src-pages-library-tsx-a288e96a7813788b4d61.js","sourcesContent":["import { SiteMetadata } from \"@/templates/main.layout\"\nimport { graphql, PageProps } from \"gatsby\"\nimport React from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport { AllBookQuery } from \"typings/graphql-types\"\n\nexport const query = graphql`\n  query allBook {\n    allBook {\n      group(field: series) {\n        fieldValue\n        edges {\n          node {\n            id\n            name\n            series\n            slug\n            keywords\n            author\n            categories\n            description\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction Library({ data, location }: PageProps<AllBookQuery>) {\n  const { setMetadata } = React.useContext(SiteMetadata)\n\n  React.useEffect(() => {\n    setMetadata(prev => ({\n      title: \"ËóèÁªè\",\n      subTitle: \"ÂçöÈáá‰ºóÈïø\",\n      description: \"ÂêõÁü•ÂÖ∂ÈöæÔºåÂàôËá™ËÉΩÊóÅÊêúÂçöÈáá\",\n    }))\n  }, [])\n  return (\n    <Container fluid=\"lg\" className=\"mx-auto\">\n      {data.allBook.group.map(({ fieldValue: series, edges }) => (\n        <React.Fragment key={series}>\n          <h3 className=\"mb-3 text-new\">{series}</h3>\n          <ul>\n            {edges.map(({ node }) => {\n              const { name, author, slug, description, keywords } = node\n              return (\n                <li id={name} className=\"mb-3 \" key={name}>\n                  <div>\n                    {name} - {author}\n                  </div>\n                  {description && (\n                    <div className=\"text-muted\">ÁÆÄËø∞Ôºö{description}</div>\n                  )}\n\n                  <div className=\"text-muted tags mb-3\">\n                    ÂÖ≥ÈîÆËØçÔºö{keywords.join(\"„ÄÅ\")}\n                  </div>\n\n                  <a\n                    className=\"d-block btn btn-outline-primary btn-sm text-nowrap\"\n                    href={`${slug}`}\n                    target=\"_blank\"\n                    rel=\"contents noopener noreferrer\"\n                    download\n                  >\n                    üì• Download / Read\n                  </a>\n                </li>\n              )\n            })}\n          </ul>\n        </React.Fragment>\n      ))}\n    </Container>\n  )\n}\n\nexport default Library\n"],"sourceRoot":""}